
ws2812b_lib.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e98  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  00000e98  00000f2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000268  00800064  00800064  00000f30  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f30  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f60  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000f9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009db  00000000  00000000  00001014  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006bd  00000000  00000000  000019ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000453  00000000  00000000  000020ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b4  00000000  00000000  00002500  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000044f  00000000  00000000  000026b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000546  00000000  00000000  00002b03  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00003049  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	53 c0       	rjmp	.+166    	; 0xa8 <__ctors_end>
   2:	6d c0       	rjmp	.+218    	; 0xde <__bad_interrupt>
   4:	6c c0       	rjmp	.+216    	; 0xde <__bad_interrupt>
   6:	6b c0       	rjmp	.+214    	; 0xde <__bad_interrupt>
   8:	6a c0       	rjmp	.+212    	; 0xde <__bad_interrupt>
   a:	69 c0       	rjmp	.+210    	; 0xde <__bad_interrupt>
   c:	68 c0       	rjmp	.+208    	; 0xde <__bad_interrupt>
   e:	67 c0       	rjmp	.+206    	; 0xde <__bad_interrupt>
  10:	66 c0       	rjmp	.+204    	; 0xde <__bad_interrupt>
  12:	65 c0       	rjmp	.+202    	; 0xde <__bad_interrupt>
  14:	64 c0       	rjmp	.+200    	; 0xde <__bad_interrupt>
  16:	63 c0       	rjmp	.+198    	; 0xde <__bad_interrupt>
  18:	62 c0       	rjmp	.+196    	; 0xde <__bad_interrupt>
  1a:	61 c0       	rjmp	.+194    	; 0xde <__bad_interrupt>
  1c:	60 c0       	rjmp	.+192    	; 0xde <__bad_interrupt>
  1e:	5f c0       	rjmp	.+190    	; 0xde <__bad_interrupt>
  20:	5e c0       	rjmp	.+188    	; 0xde <__bad_interrupt>
  22:	5d c0       	rjmp	.+186    	; 0xde <__bad_interrupt>
  24:	5c c0       	rjmp	.+184    	; 0xde <__bad_interrupt>
  26:	07 63       	ori	r16, 0x37	; 55
  28:	42 36       	cpi	r20, 0x62	; 98
  2a:	b7 9b       	sbis	0x16, 7	; 22
  2c:	d8 a7       	std	Y+40, r29	; 0x28
  2e:	1a 39       	cpi	r17, 0x9A	; 154
  30:	68 56       	subi	r22, 0x68	; 104
  32:	18 ae       	std	Y+56, r1	; 0x38
  34:	ba ab       	std	Y+50, r27	; 0x32
  36:	55 8c       	ldd	r5, Z+29	; 0x1d
  38:	1d 3c       	cpi	r17, 0xCD	; 205
  3a:	b7 cc       	rjmp	.-1682   	; 0xfffff9aa <__eeprom_end+0xff7ef9aa>
  3c:	57 63       	ori	r21, 0x37	; 55
  3e:	bd 6d       	ori	r27, 0xDD	; 221
  40:	ed fd       	.word	0xfded	; ????
  42:	75 3e       	cpi	r23, 0xE5	; 229
  44:	f6 17       	cp	r31, r22
  46:	72 31       	cpi	r23, 0x12	; 18
  48:	bf 00       	.word	0x00bf	; ????
  4a:	00 00       	nop
  4c:	80 3f       	cpi	r24, 0xF0	; 240
  4e:	08 00       	.word	0x0008	; ????
  50:	00 00       	nop
  52:	be 92       	st	-X, r11
  54:	24 49       	sbci	r18, 0x94	; 148
  56:	12 3e       	cpi	r17, 0xE2	; 226
  58:	ab aa       	std	Y+51, r10	; 0x33
  5a:	aa 2a       	or	r10, r26
  5c:	be cd       	rjmp	.-1156   	; 0xfffffbda <__eeprom_end+0xff7efbda>
  5e:	cc cc       	rjmp	.-1640   	; 0xfffff9f8 <__eeprom_end+0xff7ef9f8>
  60:	4c 3e       	cpi	r20, 0xEC	; 236
  62:	00 00       	nop
  64:	00 80       	ld	r0, Z
  66:	be ab       	std	Y+54, r27	; 0x36
  68:	aa aa       	std	Y+50, r10	; 0x32
  6a:	aa 3e       	cpi	r26, 0xEA	; 234
  6c:	00 00       	nop
  6e:	00 00       	nop
  70:	bf 00       	.word	0x00bf	; ????
  72:	00 00       	nop
  74:	80 3f       	cpi	r24, 0xF0	; 240
  76:	00 00       	nop
  78:	00 00       	nop
  7a:	00 08       	sbc	r0, r0
  7c:	41 78       	andi	r20, 0x81	; 129
  7e:	d3 bb       	out	0x13, r29	; 19
  80:	43 87       	std	Z+11, r20	; 0x0b
  82:	d1 13       	cpse	r29, r17
  84:	3d 19       	sub	r19, r13
  86:	0e 3c       	cpi	r16, 0xCE	; 206
  88:	c3 bd       	out	0x23, r28	; 35
  8a:	42 82       	std	Z+2, r4	; 0x02
  8c:	ad 2b       	or	r26, r29
  8e:	3e 68       	ori	r19, 0x8E	; 142
  90:	ec 82       	std	Y+4, r14	; 0x04
  92:	76 be       	out	0x36, r7	; 54
  94:	d9 8f       	std	Y+25, r29	; 0x19
  96:	e1 a9       	ldd	r30, Z+49	; 0x31
  98:	3e 4c       	sbci	r19, 0xCE	; 206
  9a:	80 ef       	ldi	r24, 0xF0	; 240
  9c:	ff be       	out	0x3f, r15	; 63
  9e:	01 c4       	rjmp	.+2050   	; 0x8a2 <__fp_powser+0x8>
  a0:	ff 7f       	andi	r31, 0xFF	; 255
  a2:	3f 00       	.word	0x003f	; ????
  a4:	00 00       	nop
	...

000000a8 <__ctors_end>:
  a8:	11 24       	eor	r1, r1
  aa:	1f be       	out	0x3f, r1	; 63
  ac:	cf e5       	ldi	r28, 0x5F	; 95
  ae:	d4 e0       	ldi	r29, 0x04	; 4
  b0:	de bf       	out	0x3e, r29	; 62
  b2:	cd bf       	out	0x3d, r28	; 61

000000b4 <__do_clear_bss>:
  b4:	22 e0       	ldi	r18, 0x02	; 2
  b6:	a4 e6       	ldi	r26, 0x64	; 100
  b8:	b0 e0       	ldi	r27, 0x00	; 0
  ba:	01 c0       	rjmp	.+2      	; 0xbe <.do_clear_bss_start>

000000bc <.do_clear_bss_loop>:
  bc:	1d 92       	st	X+, r1

000000be <.do_clear_bss_start>:
  be:	ac 3c       	cpi	r26, 0xCC	; 204
  c0:	b2 07       	cpc	r27, r18
  c2:	e1 f7       	brne	.-8      	; 0xbc <.do_clear_bss_loop>

000000c4 <__do_copy_data>:
  c4:	10 e0       	ldi	r17, 0x00	; 0
  c6:	a0 e6       	ldi	r26, 0x60	; 96
  c8:	b0 e0       	ldi	r27, 0x00	; 0
  ca:	e8 e9       	ldi	r30, 0x98	; 152
  cc:	fe e0       	ldi	r31, 0x0E	; 14
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <__do_copy_data+0x10>
  d0:	05 90       	lpm	r0, Z+
  d2:	0d 92       	st	X+, r0
  d4:	a4 36       	cpi	r26, 0x64	; 100
  d6:	b1 07       	cpc	r27, r17
  d8:	d9 f7       	brne	.-10     	; 0xd0 <__do_copy_data+0xc>
  da:	3b d2       	rcall	.+1142   	; 0x552 <main>
  dc:	db c6       	rjmp	.+3510   	; 0xe94 <_exit>

000000de <__bad_interrupt>:
  de:	90 cf       	rjmp	.-224    	; 0x0 <__vectors>

000000e0 <Set0>:
}

float map(float x, float in_min, float in_max, float out_min, float out_max)
{
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}
  e0:	a9 9a       	sbi	0x15, 1	; 21
	...
  ea:	00 00       	nop
  ec:	a9 98       	cbi	0x15, 1	; 21
  ee:	08 95       	ret

000000f0 <Set1>:
  f0:	a9 9a       	sbi	0x15, 1	; 21
	...
 106:	00 00       	nop
 108:	a9 98       	cbi	0x15, 1	; 21
 10a:	08 95       	ret

0000010c <setLedValues>:
 10c:	8f 92       	push	r8
 10e:	9f 92       	push	r9
 110:	af 92       	push	r10
 112:	bf 92       	push	r11
 114:	ef 92       	push	r14
 116:	ff 92       	push	r15
 118:	0f 93       	push	r16
 11a:	1f 93       	push	r17
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	00 e7       	ldi	r16, 0x70	; 112
 122:	10 e0       	ldi	r17, 0x00	; 0
 124:	0f 2e       	mov	r0, r31
 126:	f8 ec       	ldi	r31, 0xC8	; 200
 128:	ef 2e       	mov	r14, r31
 12a:	f2 e0       	ldi	r31, 0x02	; 2
 12c:	ff 2e       	mov	r15, r31
 12e:	f0 2d       	mov	r31, r0
 130:	1b c0       	rjmp	.+54     	; 0x168 <setLedValues+0x5c>
 132:	b6 94       	lsr	r11
 134:	a7 94       	ror	r10
 136:	97 94       	ror	r9
 138:	87 94       	ror	r8
 13a:	f8 01       	movw	r30, r16
 13c:	80 81       	ld	r24, Z
 13e:	91 81       	ldd	r25, Z+1	; 0x01
 140:	a2 81       	ldd	r26, Z+2	; 0x02
 142:	b3 81       	ldd	r27, Z+3	; 0x03
 144:	88 21       	and	r24, r8
 146:	99 21       	and	r25, r9
 148:	aa 21       	and	r26, r10
 14a:	bb 21       	and	r27, r11
 14c:	89 2b       	or	r24, r25
 14e:	8a 2b       	or	r24, r26
 150:	8b 2b       	or	r24, r27
 152:	11 f4       	brne	.+4      	; 0x158 <setLedValues+0x4c>
 154:	c5 df       	rcall	.-118    	; 0xe0 <Set0>
 156:	01 c0       	rjmp	.+2      	; 0x15a <setLedValues+0x4e>
 158:	cb df       	rcall	.-106    	; 0xf0 <Set1>
 15a:	21 97       	sbiw	r28, 0x01	; 1
 15c:	51 f7       	brne	.-44     	; 0x132 <setLedValues+0x26>
 15e:	0c 5f       	subi	r16, 0xFC	; 252
 160:	1f 4f       	sbci	r17, 0xFF	; 255
 162:	e0 16       	cp	r14, r16
 164:	f1 06       	cpc	r15, r17
 166:	39 f0       	breq	.+14     	; 0x176 <setLedValues+0x6a>
 168:	c8 e1       	ldi	r28, 0x18	; 24
 16a:	d0 e0       	ldi	r29, 0x00	; 0
 16c:	81 2c       	mov	r8, r1
 16e:	91 2c       	mov	r9, r1
 170:	54 01       	movw	r10, r8
 172:	b3 94       	inc	r11
 174:	de cf       	rjmp	.-68     	; 0x132 <setLedValues+0x26>
 176:	df 91       	pop	r29
 178:	cf 91       	pop	r28
 17a:	1f 91       	pop	r17
 17c:	0f 91       	pop	r16
 17e:	ff 90       	pop	r15
 180:	ef 90       	pop	r14
 182:	bf 90       	pop	r11
 184:	af 90       	pop	r10
 186:	9f 90       	pop	r9
 188:	8f 90       	pop	r8
 18a:	08 95       	ret

0000018c <randomVector>:

// Возвращает рандомное число от -1.0 до 1.0
float randomVector()
{
	int randomIntValue = random()%100;
 18c:	13 d6       	rcall	.+3110   	; 0xdb4 <random>
	float randomValue  = (float)randomIntValue;

	return map(randomValue, 0.0, 100.0, -1.0, 1.0);
 18e:	24 e6       	ldi	r18, 0x64	; 100
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	40 e0       	ldi	r20, 0x00	; 0
 194:	50 e0       	ldi	r21, 0x00	; 0
 196:	88 d5       	rcall	.+2832   	; 0xca8 <__divmodsi4>
 198:	07 2e       	mov	r0, r23
 19a:	00 0c       	add	r0, r0
 19c:	88 0b       	sbc	r24, r24
 19e:	99 0b       	sbc	r25, r25
 1a0:	38 d3       	rcall	.+1648   	; 0x812 <__floatsisf>
 1a2:	9b 01       	movw	r18, r22
 1a4:	ac 01       	movw	r20, r24
 1a6:	0a d2       	rcall	.+1044   	; 0x5bc <__addsf3>
 1a8:	20 e0       	ldi	r18, 0x00	; 0
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	48 ec       	ldi	r20, 0xC8	; 200
 1ae:	52 e4       	ldi	r21, 0x42	; 66
 1b0:	69 d2       	rcall	.+1234   	; 0x684 <__divsf3>
 1b2:	20 e0       	ldi	r18, 0x00	; 0
 1b4:	30 e0       	ldi	r19, 0x00	; 0
 1b6:	40 e8       	ldi	r20, 0x80	; 128
 1b8:	5f e3       	ldi	r21, 0x3F	; 63
 1ba:	ff d1       	rcall	.+1022   	; 0x5ba <__subsf3>
}
 1bc:	08 95       	ret

000001be <moveVectors>:
float prevVector, nextVector;

//После каждой обработки сегмента смещаемся к следующему
void moveVectors(void)
{
	prevVector = nextVector;
 1be:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <nextVector>
 1c2:	90 91 c9 02 	lds	r25, 0x02C9	; 0x8002c9 <nextVector+0x1>
 1c6:	a0 91 ca 02 	lds	r26, 0x02CA	; 0x8002ca <nextVector+0x2>
 1ca:	b0 91 cb 02 	lds	r27, 0x02CB	; 0x8002cb <nextVector+0x3>
 1ce:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <prevVector>
 1d2:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <prevVector+0x1>
 1d6:	a0 93 6e 00 	sts	0x006E, r26	; 0x80006e <prevVector+0x2>
 1da:	b0 93 6f 00 	sts	0x006F, r27	; 0x80006f <prevVector+0x3>
	nextVector =  randomVector();
 1de:	d6 df       	rcall	.-84     	; 0x18c <randomVector>
 1e0:	60 93 c8 02 	sts	0x02C8, r22	; 0x8002c8 <nextVector>
 1e4:	70 93 c9 02 	sts	0x02C9, r23	; 0x8002c9 <nextVector+0x1>
 1e8:	80 93 ca 02 	sts	0x02CA, r24	; 0x8002ca <nextVector+0x2>
 1ec:	90 93 cb 02 	sts	0x02CB, r25	; 0x8002cb <nextVector+0x3>
 1f0:	08 95       	ret

000001f2 <countNextColorPosition>:

float abcisePosition = 0.0;
float interpolatedPoint = 0.0;

void countNextColorPosition(void)
{				   
 1f2:	4f 92       	push	r4
 1f4:	5f 92       	push	r5
 1f6:	6f 92       	push	r6
 1f8:	7f 92       	push	r7
 1fa:	8f 92       	push	r8
 1fc:	9f 92       	push	r9
 1fe:	af 92       	push	r10
 200:	bf 92       	push	r11
 202:	cf 92       	push	r12
 204:	df 92       	push	r13
 206:	ef 92       	push	r14
 208:	ff 92       	push	r15
 20a:	cf 93       	push	r28
 20c:	df 93       	push	r29
 20e:	cd b7       	in	r28, 0x3d	; 61
 210:	de b7       	in	r29, 0x3e	; 62
 212:	2c 97       	sbiw	r28, 0x0c	; 12
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	f8 94       	cli
 218:	de bf       	out	0x3e, r29	; 62
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	cd bf       	out	0x3d, r28	; 61
	float firstPoint  = prevVector*abcisePosition;
 21e:	40 90 68 00 	lds	r4, 0x0068	; 0x800068 <abcisePosition>
 222:	50 90 69 00 	lds	r5, 0x0069	; 0x800069 <abcisePosition+0x1>
 226:	60 90 6a 00 	lds	r6, 0x006A	; 0x80006a <abcisePosition+0x2>
 22a:	70 90 6b 00 	lds	r7, 0x006B	; 0x80006b <abcisePosition+0x3>
 22e:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <prevVector>
 232:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <prevVector+0x1>
 236:	40 91 6e 00 	lds	r20, 0x006E	; 0x80006e <prevVector+0x2>
 23a:	50 91 6f 00 	lds	r21, 0x006F	; 0x80006f <prevVector+0x3>
 23e:	c3 01       	movw	r24, r6
 240:	b2 01       	movw	r22, r4
 242:	0c d4       	rcall	.+2072   	; 0xa5c <__mulsf3>
 244:	69 83       	std	Y+1, r22	; 0x01
 246:	7a 83       	std	Y+2, r23	; 0x02
 248:	8b 83       	std	Y+3, r24	; 0x03
 24a:	9c 83       	std	Y+4, r25	; 0x04
	float secondPoint = nextVector*(abcisePosition - 1.0);
 24c:	20 e0       	ldi	r18, 0x00	; 0
 24e:	30 e0       	ldi	r19, 0x00	; 0
 250:	40 e8       	ldi	r20, 0x80	; 128
 252:	5f e3       	ldi	r21, 0x3F	; 63
 254:	c3 01       	movw	r24, r6
 256:	b2 01       	movw	r22, r4
 258:	b0 d1       	rcall	.+864    	; 0x5ba <__subsf3>
 25a:	20 91 c8 02 	lds	r18, 0x02C8	; 0x8002c8 <nextVector>
 25e:	30 91 c9 02 	lds	r19, 0x02C9	; 0x8002c9 <nextVector+0x1>
 262:	40 91 ca 02 	lds	r20, 0x02CA	; 0x8002ca <nextVector+0x2>
 266:	50 91 cb 02 	lds	r21, 0x02CB	; 0x8002cb <nextVector+0x3>
 26a:	f8 d3       	rcall	.+2032   	; 0xa5c <__mulsf3>
 26c:	6b 01       	movw	r12, r22
 26e:	7c 01       	movw	r14, r24
	interpolatedPoint = (2.0*(firstPoint - secondPoint)*powf(abcisePosition, 4.0) - (3.0*firstPoint - 5.0*secondPoint)*powf(abcisePosition, 3.0) - 3.0*secondPoint*powf(abcisePosition, 2.0) + firstPoint*abcisePosition);
 270:	20 e0       	ldi	r18, 0x00	; 0
 272:	30 e0       	ldi	r19, 0x00	; 0
 274:	40 e8       	ldi	r20, 0x80	; 128
 276:	50 e4       	ldi	r21, 0x40	; 64
 278:	c3 01       	movw	r24, r6
 27a:	b2 01       	movw	r22, r4
 27c:	52 d4       	rcall	.+2212   	; 0xb22 <pow>
 27e:	4b 01       	movw	r8, r22
 280:	5c 01       	movw	r10, r24
 282:	20 e0       	ldi	r18, 0x00	; 0
 284:	30 e0       	ldi	r19, 0x00	; 0
 286:	40 e4       	ldi	r20, 0x40	; 64
 288:	50 e4       	ldi	r21, 0x40	; 64
 28a:	c3 01       	movw	r24, r6
 28c:	b2 01       	movw	r22, r4
 28e:	49 d4       	rcall	.+2194   	; 0xb22 <pow>
 290:	6d 83       	std	Y+5, r22	; 0x05
 292:	7e 83       	std	Y+6, r23	; 0x06
 294:	8f 83       	std	Y+7, r24	; 0x07
 296:	98 87       	std	Y+8, r25	; 0x08
 298:	a7 01       	movw	r20, r14
 29a:	96 01       	movw	r18, r12
 29c:	69 81       	ldd	r22, Y+1	; 0x01
 29e:	7a 81       	ldd	r23, Y+2	; 0x02
 2a0:	8b 81       	ldd	r24, Y+3	; 0x03
 2a2:	9c 81       	ldd	r25, Y+4	; 0x04
 2a4:	8a d1       	rcall	.+788    	; 0x5ba <__subsf3>
 2a6:	9b 01       	movw	r18, r22
 2a8:	ac 01       	movw	r20, r24
 2aa:	88 d1       	rcall	.+784    	; 0x5bc <__addsf3>
 2ac:	a5 01       	movw	r20, r10
 2ae:	94 01       	movw	r18, r8
 2b0:	d5 d3       	rcall	.+1962   	; 0xa5c <__mulsf3>
 2b2:	69 87       	std	Y+9, r22	; 0x09
 2b4:	7a 87       	std	Y+10, r23	; 0x0a
 2b6:	8b 87       	std	Y+11, r24	; 0x0b
 2b8:	9c 87       	std	Y+12, r25	; 0x0c
 2ba:	20 e0       	ldi	r18, 0x00	; 0
 2bc:	30 e0       	ldi	r19, 0x00	; 0
 2be:	40 e4       	ldi	r20, 0x40	; 64
 2c0:	50 e4       	ldi	r21, 0x40	; 64
 2c2:	69 81       	ldd	r22, Y+1	; 0x01
 2c4:	7a 81       	ldd	r23, Y+2	; 0x02
 2c6:	8b 81       	ldd	r24, Y+3	; 0x03
 2c8:	9c 81       	ldd	r25, Y+4	; 0x04
 2ca:	c8 d3       	rcall	.+1936   	; 0xa5c <__mulsf3>
 2cc:	4b 01       	movw	r8, r22
 2ce:	5c 01       	movw	r10, r24
 2d0:	20 e0       	ldi	r18, 0x00	; 0
 2d2:	30 e0       	ldi	r19, 0x00	; 0
 2d4:	40 ea       	ldi	r20, 0xA0	; 160
 2d6:	50 e4       	ldi	r21, 0x40	; 64
 2d8:	c7 01       	movw	r24, r14
 2da:	b6 01       	movw	r22, r12
 2dc:	bf d3       	rcall	.+1918   	; 0xa5c <__mulsf3>
 2de:	9b 01       	movw	r18, r22
 2e0:	ac 01       	movw	r20, r24
 2e2:	c5 01       	movw	r24, r10
 2e4:	b4 01       	movw	r22, r8
 2e6:	69 d1       	rcall	.+722    	; 0x5ba <__subsf3>
 2e8:	2d 81       	ldd	r18, Y+5	; 0x05
 2ea:	3e 81       	ldd	r19, Y+6	; 0x06
 2ec:	4f 81       	ldd	r20, Y+7	; 0x07
 2ee:	58 85       	ldd	r21, Y+8	; 0x08
 2f0:	b5 d3       	rcall	.+1898   	; 0xa5c <__mulsf3>
 2f2:	9b 01       	movw	r18, r22
 2f4:	ac 01       	movw	r20, r24
 2f6:	69 85       	ldd	r22, Y+9	; 0x09
 2f8:	7a 85       	ldd	r23, Y+10	; 0x0a
 2fa:	8b 85       	ldd	r24, Y+11	; 0x0b
 2fc:	9c 85       	ldd	r25, Y+12	; 0x0c
 2fe:	5d d1       	rcall	.+698    	; 0x5ba <__subsf3>
 300:	4b 01       	movw	r8, r22
 302:	5c 01       	movw	r10, r24
 304:	20 e0       	ldi	r18, 0x00	; 0
 306:	30 e0       	ldi	r19, 0x00	; 0
 308:	40 e4       	ldi	r20, 0x40	; 64
 30a:	50 e4       	ldi	r21, 0x40	; 64
 30c:	c7 01       	movw	r24, r14
 30e:	b6 01       	movw	r22, r12
 310:	a5 d3       	rcall	.+1866   	; 0xa5c <__mulsf3>
 312:	6b 01       	movw	r12, r22
 314:	7c 01       	movw	r14, r24
 316:	a3 01       	movw	r20, r6
 318:	92 01       	movw	r18, r4
 31a:	c3 01       	movw	r24, r6
 31c:	b2 01       	movw	r22, r4
 31e:	9e d3       	rcall	.+1852   	; 0xa5c <__mulsf3>
 320:	9b 01       	movw	r18, r22
 322:	ac 01       	movw	r20, r24
 324:	c7 01       	movw	r24, r14
 326:	b6 01       	movw	r22, r12
 328:	99 d3       	rcall	.+1842   	; 0xa5c <__mulsf3>
 32a:	9b 01       	movw	r18, r22
 32c:	ac 01       	movw	r20, r24
 32e:	c5 01       	movw	r24, r10
 330:	b4 01       	movw	r22, r8
 332:	43 d1       	rcall	.+646    	; 0x5ba <__subsf3>
 334:	6b 01       	movw	r12, r22
 336:	7c 01       	movw	r14, r24
 338:	29 81       	ldd	r18, Y+1	; 0x01
 33a:	3a 81       	ldd	r19, Y+2	; 0x02
 33c:	4b 81       	ldd	r20, Y+3	; 0x03
 33e:	5c 81       	ldd	r21, Y+4	; 0x04
 340:	c3 01       	movw	r24, r6
 342:	b2 01       	movw	r22, r4
 344:	8b d3       	rcall	.+1814   	; 0xa5c <__mulsf3>
 346:	9b 01       	movw	r18, r22
 348:	ac 01       	movw	r20, r24
 34a:	c7 01       	movw	r24, r14
 34c:	b6 01       	movw	r22, r12
 34e:	36 d1       	rcall	.+620    	; 0x5bc <__addsf3>
 350:	4b 01       	movw	r8, r22
 352:	5c 01       	movw	r10, r24
	interpolatedPoint = (expf(interpolatedPoint*COMPRESS_VALUE)-expf(-1*interpolatedPoint*COMPRESS_VALUE))/(expf(interpolatedPoint*COMPRESS_VALUE)+expf(-1*interpolatedPoint*COMPRESS_VALUE));
 354:	20 e0       	ldi	r18, 0x00	; 0
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	40 ee       	ldi	r20, 0xE0	; 224
 35a:	50 e4       	ldi	r21, 0x40	; 64
 35c:	7f d3       	rcall	.+1790   	; 0xa5c <__mulsf3>
 35e:	ff d1       	rcall	.+1022   	; 0x75e <exp>
 360:	6b 01       	movw	r12, r22
 362:	7c 01       	movw	r14, r24
 364:	c5 01       	movw	r24, r10
 366:	b4 01       	movw	r22, r8
 368:	90 58       	subi	r25, 0x80	; 128
 36a:	20 e0       	ldi	r18, 0x00	; 0
 36c:	30 e0       	ldi	r19, 0x00	; 0
 36e:	40 ee       	ldi	r20, 0xE0	; 224
 370:	50 e4       	ldi	r21, 0x40	; 64
 372:	74 d3       	rcall	.+1768   	; 0xa5c <__mulsf3>
 374:	f4 d1       	rcall	.+1000   	; 0x75e <exp>
 376:	4b 01       	movw	r8, r22
 378:	5c 01       	movw	r10, r24
 37a:	9b 01       	movw	r18, r22
 37c:	ac 01       	movw	r20, r24
 37e:	c7 01       	movw	r24, r14
 380:	b6 01       	movw	r22, r12
 382:	1b d1       	rcall	.+566    	; 0x5ba <__subsf3>
 384:	69 83       	std	Y+1, r22	; 0x01
 386:	7a 83       	std	Y+2, r23	; 0x02
 388:	8b 83       	std	Y+3, r24	; 0x03
 38a:	9c 83       	std	Y+4, r25	; 0x04
 38c:	a5 01       	movw	r20, r10
 38e:	94 01       	movw	r18, r8
 390:	c7 01       	movw	r24, r14
 392:	b6 01       	movw	r22, r12
 394:	13 d1       	rcall	.+550    	; 0x5bc <__addsf3>
 396:	9b 01       	movw	r18, r22
 398:	ac 01       	movw	r20, r24
 39a:	69 81       	ldd	r22, Y+1	; 0x01
 39c:	7a 81       	ldd	r23, Y+2	; 0x02
 39e:	8b 81       	ldd	r24, Y+3	; 0x03
 3a0:	9c 81       	ldd	r25, Y+4	; 0x04
 3a2:	70 d1       	rcall	.+736    	; 0x684 <__divsf3>
 3a4:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__data_end>
 3a8:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__data_end+0x1>
 3ac:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__data_end+0x2>
 3b0:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__data_end+0x3>

	abcisePosition += 1.0/LED_IN_SEED;
 3b4:	29 e8       	ldi	r18, 0x89	; 137
 3b6:	38 e8       	ldi	r19, 0x88	; 136
 3b8:	48 e8       	ldi	r20, 0x88	; 136
 3ba:	5c e3       	ldi	r21, 0x3C	; 60
 3bc:	c3 01       	movw	r24, r6
 3be:	b2 01       	movw	r22, r4
 3c0:	fd d0       	rcall	.+506    	; 0x5bc <__addsf3>
 3c2:	6b 01       	movw	r12, r22
 3c4:	7c 01       	movw	r14, r24

	if (abcisePosition > 1.0)
 3c6:	20 e0       	ldi	r18, 0x00	; 0
 3c8:	30 e0       	ldi	r19, 0x00	; 0
 3ca:	40 e8       	ldi	r20, 0x80	; 128
 3cc:	5f e3       	ldi	r21, 0x3F	; 63
 3ce:	d2 d2       	rcall	.+1444   	; 0x974 <__gesf2>
 3d0:	18 16       	cp	r1, r24
 3d2:	4c f0       	brlt	.+18     	; 0x3e6 <countNextColorPosition+0x1f4>
	float firstPoint  = prevVector*abcisePosition;
	float secondPoint = nextVector*(abcisePosition - 1.0);
	interpolatedPoint = (2.0*(firstPoint - secondPoint)*powf(abcisePosition, 4.0) - (3.0*firstPoint - 5.0*secondPoint)*powf(abcisePosition, 3.0) - 3.0*secondPoint*powf(abcisePosition, 2.0) + firstPoint*abcisePosition);
	interpolatedPoint = (expf(interpolatedPoint*COMPRESS_VALUE)-expf(-1*interpolatedPoint*COMPRESS_VALUE))/(expf(interpolatedPoint*COMPRESS_VALUE)+expf(-1*interpolatedPoint*COMPRESS_VALUE));

	abcisePosition += 1.0/LED_IN_SEED;
 3d4:	c0 92 68 00 	sts	0x0068, r12	; 0x800068 <abcisePosition>
 3d8:	d0 92 69 00 	sts	0x0069, r13	; 0x800069 <abcisePosition+0x1>
 3dc:	e0 92 6a 00 	sts	0x006A, r14	; 0x80006a <abcisePosition+0x2>
 3e0:	f0 92 6b 00 	sts	0x006B, r15	; 0x80006b <abcisePosition+0x3>
 3e4:	09 c0       	rjmp	.+18     	; 0x3f8 <countNextColorPosition+0x206>

	if (abcisePosition > 1.0)
	{
		abcisePosition = 0.0;
 3e6:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <abcisePosition>
 3ea:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <abcisePosition+0x1>
 3ee:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <abcisePosition+0x2>
 3f2:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <abcisePosition+0x3>
		moveVectors();
 3f6:	e3 de       	rcall	.-570    	; 0x1be <moveVectors>
	}
}
 3f8:	2c 96       	adiw	r28, 0x0c	; 12
 3fa:	0f b6       	in	r0, 0x3f	; 63
 3fc:	f8 94       	cli
 3fe:	de bf       	out	0x3e, r29	; 62
 400:	0f be       	out	0x3f, r0	; 63
 402:	cd bf       	out	0x3d, r28	; 61
 404:	df 91       	pop	r29
 406:	cf 91       	pop	r28
 408:	ff 90       	pop	r15
 40a:	ef 90       	pop	r14
 40c:	df 90       	pop	r13
 40e:	cf 90       	pop	r12
 410:	bf 90       	pop	r11
 412:	af 90       	pop	r10
 414:	9f 90       	pop	r9
 416:	8f 90       	pop	r8
 418:	7f 90       	pop	r7
 41a:	6f 90       	pop	r6
 41c:	5f 90       	pop	r5
 41e:	4f 90       	pop	r4
 420:	08 95       	ret

00000422 <getRed>:

unsigned long int getRed()
{
	long int intervalColorR  = (long int)(END_R - START_R);
	return (unsigned long int)((float)(intervalColorR*map(interpolatedPoint, -1.0, 1.0, 0.0, 1.0)) + START_R)*0x100;
 422:	20 e0       	ldi	r18, 0x00	; 0
 424:	30 e0       	ldi	r19, 0x00	; 0
 426:	40 e8       	ldi	r20, 0x80	; 128
 428:	5f e3       	ldi	r21, 0x3F	; 63
 42a:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__data_end>
 42e:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__data_end+0x1>
 432:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end+0x2>
 436:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__data_end+0x3>
 43a:	c0 d0       	rcall	.+384    	; 0x5bc <__addsf3>
 43c:	20 e0       	ldi	r18, 0x00	; 0
 43e:	30 e0       	ldi	r19, 0x00	; 0
 440:	40 e0       	ldi	r20, 0x00	; 0
 442:	5f e3       	ldi	r21, 0x3F	; 63
 444:	0b d3       	rcall	.+1558   	; 0xa5c <__mulsf3>
 446:	20 e0       	ldi	r18, 0x00	; 0
 448:	30 e0       	ldi	r19, 0x00	; 0
 44a:	a9 01       	movw	r20, r18
 44c:	b7 d0       	rcall	.+366    	; 0x5bc <__addsf3>
 44e:	20 e0       	ldi	r18, 0x00	; 0
 450:	30 e0       	ldi	r19, 0x00	; 0
 452:	4f e7       	ldi	r20, 0x7F	; 127
 454:	53 ec       	ldi	r21, 0xC3	; 195
 456:	02 d3       	rcall	.+1540   	; 0xa5c <__mulsf3>
 458:	20 e0       	ldi	r18, 0x00	; 0
 45a:	30 e0       	ldi	r19, 0x00	; 0
 45c:	4f e7       	ldi	r20, 0x7F	; 127
 45e:	53 e4       	ldi	r21, 0x43	; 67
 460:	ad d0       	rcall	.+346    	; 0x5bc <__addsf3>
 462:	a9 d1       	rcall	.+850    	; 0x7b6 <__fixunssfsi>
 464:	98 2f       	mov	r25, r24
 466:	87 2f       	mov	r24, r23
 468:	76 2f       	mov	r23, r22
 46a:	66 27       	eor	r22, r22
}
 46c:	08 95       	ret

0000046e <getGreen>:

unsigned long int getGreen()
{
	long int intervalColorG  = (long int)(END_G - START_G);
	return (unsigned long int)((float)(intervalColorG*map(interpolatedPoint, -1.0, 1.0, 0.0, 1.0)) + START_G)*0x10000;
 46e:	20 e0       	ldi	r18, 0x00	; 0
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	40 e8       	ldi	r20, 0x80	; 128
 474:	5f e3       	ldi	r21, 0x3F	; 63
 476:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__data_end>
 47a:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__data_end+0x1>
 47e:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end+0x2>
 482:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__data_end+0x3>
 486:	9a d0       	rcall	.+308    	; 0x5bc <__addsf3>
 488:	20 e0       	ldi	r18, 0x00	; 0
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	40 e0       	ldi	r20, 0x00	; 0
 48e:	5f e3       	ldi	r21, 0x3F	; 63
 490:	e5 d2       	rcall	.+1482   	; 0xa5c <__mulsf3>
 492:	20 e0       	ldi	r18, 0x00	; 0
 494:	30 e0       	ldi	r19, 0x00	; 0
 496:	a9 01       	movw	r20, r18
 498:	91 d0       	rcall	.+290    	; 0x5bc <__addsf3>
 49a:	20 e0       	ldi	r18, 0x00	; 0
 49c:	30 e0       	ldi	r19, 0x00	; 0
 49e:	a9 01       	movw	r20, r18
 4a0:	dd d2       	rcall	.+1466   	; 0xa5c <__mulsf3>
 4a2:	20 e0       	ldi	r18, 0x00	; 0
 4a4:	30 e0       	ldi	r19, 0x00	; 0
 4a6:	a9 01       	movw	r20, r18
 4a8:	89 d0       	rcall	.+274    	; 0x5bc <__addsf3>
 4aa:	85 d1       	rcall	.+778    	; 0x7b6 <__fixunssfsi>
 4ac:	cb 01       	movw	r24, r22
 4ae:	77 27       	eor	r23, r23
 4b0:	66 27       	eor	r22, r22
}
 4b2:	08 95       	ret

000004b4 <getBlue>:

unsigned long int getBlue() {
	long int intervalColorB  = (long int)(END_B - START_B);
	return (unsigned long int)((float)(intervalColorB*map(interpolatedPoint, -1.0, 1.0, 0.0, 1.0)) + START_B);
 4b4:	20 e0       	ldi	r18, 0x00	; 0
 4b6:	30 e0       	ldi	r19, 0x00	; 0
 4b8:	40 e8       	ldi	r20, 0x80	; 128
 4ba:	5f e3       	ldi	r21, 0x3F	; 63
 4bc:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__data_end>
 4c0:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__data_end+0x1>
 4c4:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end+0x2>
 4c8:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__data_end+0x3>
 4cc:	77 d0       	rcall	.+238    	; 0x5bc <__addsf3>
 4ce:	20 e0       	ldi	r18, 0x00	; 0
 4d0:	30 e0       	ldi	r19, 0x00	; 0
 4d2:	40 e0       	ldi	r20, 0x00	; 0
 4d4:	5f e3       	ldi	r21, 0x3F	; 63
 4d6:	c2 d2       	rcall	.+1412   	; 0xa5c <__mulsf3>
 4d8:	20 e0       	ldi	r18, 0x00	; 0
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	a9 01       	movw	r20, r18
 4de:	6e d0       	rcall	.+220    	; 0x5bc <__addsf3>
 4e0:	20 e0       	ldi	r18, 0x00	; 0
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	a9 01       	movw	r20, r18
 4e6:	ba d2       	rcall	.+1396   	; 0xa5c <__mulsf3>
 4e8:	20 e0       	ldi	r18, 0x00	; 0
 4ea:	30 e0       	ldi	r19, 0x00	; 0
 4ec:	a9 01       	movw	r20, r18
 4ee:	66 d0       	rcall	.+204    	; 0x5bc <__addsf3>
 4f0:	62 d1       	rcall	.+708    	; 0x7b6 <__fixunssfsi>
}
 4f2:	08 95       	ret

000004f4 <moveArray>:

// сдвиг вправо с рассчетом нового элемента
void moveArray(void) {
 4f4:	cf 92       	push	r12
 4f6:	df 92       	push	r13
 4f8:	ef 92       	push	r14
 4fa:	ff 92       	push	r15
	unsigned long int newElement;
	newElement = getGreen() + getRed() + getBlue();
 4fc:	b8 df       	rcall	.-144    	; 0x46e <getGreen>
 4fe:	6b 01       	movw	r12, r22
 500:	7c 01       	movw	r14, r24
 502:	8f df       	rcall	.-226    	; 0x422 <getRed>
 504:	c6 0e       	add	r12, r22
 506:	d7 1e       	adc	r13, r23
 508:	e8 1e       	adc	r14, r24
 50a:	f9 1e       	adc	r15, r25
 50c:	d3 df       	rcall	.-90     	; 0x4b4 <getBlue>
 50e:	ab 01       	movw	r20, r22
 510:	bc 01       	movw	r22, r24
 512:	4c 0d       	add	r20, r12
 514:	5d 1d       	adc	r21, r13
 516:	6e 1d       	adc	r22, r14
 518:	7f 1d       	adc	r23, r15
 51a:	e4 ec       	ldi	r30, 0xC4	; 196
 51c:	f2 e0       	ldi	r31, 0x02	; 2
 51e:	20 e7       	ldi	r18, 0x70	; 112
 520:	30 e0       	ldi	r19, 0x00	; 0
	for (int i = LED_QUANTITY - 1; i > 0; i--)
	{
		ledValues[i] = ledValues[i-1];
 522:	b2 91       	ld	r27, -Z
 524:	a2 91       	ld	r26, -Z
 526:	92 91       	ld	r25, -Z
 528:	82 91       	ld	r24, -Z
 52a:	84 83       	std	Z+4, r24	; 0x04
 52c:	95 83       	std	Z+5, r25	; 0x05
 52e:	a6 83       	std	Z+6, r26	; 0x06
 530:	b7 83       	std	Z+7, r27	; 0x07

// сдвиг вправо с рассчетом нового элемента
void moveArray(void) {
	unsigned long int newElement;
	newElement = getGreen() + getRed() + getBlue();
	for (int i = LED_QUANTITY - 1; i > 0; i--)
 532:	e2 17       	cp	r30, r18
 534:	f3 07       	cpc	r31, r19
 536:	a9 f7       	brne	.-22     	; 0x522 <moveArray+0x2e>
	{
		ledValues[i] = ledValues[i-1];
	}

	ledValues[0] = newElement;
 538:	40 93 70 00 	sts	0x0070, r20	; 0x800070 <ledValues>
 53c:	50 93 71 00 	sts	0x0071, r21	; 0x800071 <ledValues+0x1>
 540:	60 93 72 00 	sts	0x0072, r22	; 0x800072 <ledValues+0x2>
 544:	70 93 73 00 	sts	0x0073, r23	; 0x800073 <ledValues+0x3>
}
 548:	ff 90       	pop	r15
 54a:	ef 90       	pop	r14
 54c:	df 90       	pop	r13
 54e:	cf 90       	pop	r12
 550:	08 95       	ret

00000552 <main>:

int main(void)
{
	DDRC |= (1<<1);
 552:	a1 9a       	sbi	0x14, 1	; 20
	prevVector = randomVector();
 554:	1b de       	rcall	.-970    	; 0x18c <randomVector>
 556:	60 93 6c 00 	sts	0x006C, r22	; 0x80006c <prevVector>
 55a:	70 93 6d 00 	sts	0x006D, r23	; 0x80006d <prevVector+0x1>
 55e:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <prevVector+0x2>
 562:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <prevVector+0x3>
	nextVector = randomVector();
 566:	12 de       	rcall	.-988    	; 0x18c <randomVector>
 568:	60 93 c8 02 	sts	0x02C8, r22	; 0x8002c8 <nextVector>
 56c:	70 93 c9 02 	sts	0x02C9, r23	; 0x8002c9 <nextVector+0x1>
 570:	80 93 ca 02 	sts	0x02CA, r24	; 0x8002ca <nextVector+0x2>
 574:	90 93 cb 02 	sts	0x02CB, r25	; 0x8002cb <nextVector+0x3>
 578:	0c e2       	ldi	r16, 0x2C	; 44
 57a:	11 e0       	ldi	r17, 0x01	; 1
 57c:	06 c0       	rjmp	.+12     	; 0x58a <main+0x38>

	for (int k = 0; k < 300; k++)
	{
		for (int i = 0; i < 24; i++)
		{
			Set0();
 57e:	b0 dd       	rcall	.-1184   	; 0xe0 <Set0>
 580:	21 97       	sbiw	r28, 0x01	; 1
	prevVector = randomVector();
	nextVector = randomVector();

	for (int k = 0; k < 300; k++)
	{
		for (int i = 0; i < 24; i++)
 582:	e9 f7       	brne	.-6      	; 0x57e <main+0x2c>
 584:	01 50       	subi	r16, 0x01	; 1
 586:	11 09       	sbc	r17, r1
{
	DDRC |= (1<<1);
	prevVector = randomVector();
	nextVector = randomVector();

	for (int k = 0; k < 300; k++)
 588:	19 f0       	breq	.+6      	; 0x590 <main+0x3e>

	ledValues[0] = newElement;
}

int main(void)
{
 58a:	c8 e1       	ldi	r28, 0x18	; 24
 58c:	d0 e0       	ldi	r29, 0x00	; 0
 58e:	f7 cf       	rjmp	.-18     	; 0x57e <main+0x2c>
 590:	e0 e7       	ldi	r30, 0x70	; 112
 592:	f0 e0       	ldi	r31, 0x00	; 0
 594:	88 ec       	ldi	r24, 0xC8	; 200
 596:	92 e0       	ldi	r25, 0x02	; 2
	}

	//инициализируем ленту черным цветом
	for (int j = 0; j < LED_QUANTITY; j++)
	{
		ledValues[j] = 0x000000;
 598:	11 92       	st	Z+, r1
 59a:	11 92       	st	Z+, r1
 59c:	11 92       	st	Z+, r1
 59e:	11 92       	st	Z+, r1
			Set0();
		}
	}

	//инициализируем ленту черным цветом
	for (int j = 0; j < LED_QUANTITY; j++)
 5a0:	e8 17       	cp	r30, r24
 5a2:	f9 07       	cpc	r31, r25
 5a4:	c9 f7       	brne	.-14     	; 0x598 <main+0x46>
		ledValues[j] = 0x000000;
	}
	
    while (1)
    {
		setLedValues();
 5a6:	b2 dd       	rcall	.-1180   	; 0x10c <setLedValues>
		countNextColorPosition();
 5a8:	24 de       	rcall	.-952    	; 0x1f2 <countNextColorPosition>
		moveArray();
 5aa:	a4 df       	rcall	.-184    	; 0x4f4 <moveArray>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5ac:	8f e3       	ldi	r24, 0x3F	; 63
 5ae:	9c e9       	ldi	r25, 0x9C	; 156
 5b0:	01 97       	sbiw	r24, 0x01	; 1
 5b2:	f1 f7       	brne	.-4      	; 0x5b0 <main+0x5e>
 5b4:	00 c0       	rjmp	.+0      	; 0x5b6 <main+0x64>
 5b6:	00 00       	nop
 5b8:	f6 cf       	rjmp	.-20     	; 0x5a6 <main+0x54>

000005ba <__subsf3>:
 5ba:	50 58       	subi	r21, 0x80	; 128

000005bc <__addsf3>:
 5bc:	bb 27       	eor	r27, r27
 5be:	aa 27       	eor	r26, r26
 5c0:	0e d0       	rcall	.+28     	; 0x5de <__addsf3x>
 5c2:	9e c1       	rjmp	.+828    	; 0x900 <__fp_round>
 5c4:	8f d1       	rcall	.+798    	; 0x8e4 <__fp_pscA>
 5c6:	30 f0       	brcs	.+12     	; 0x5d4 <__addsf3+0x18>
 5c8:	94 d1       	rcall	.+808    	; 0x8f2 <__fp_pscB>
 5ca:	20 f0       	brcs	.+8      	; 0x5d4 <__addsf3+0x18>
 5cc:	31 f4       	brne	.+12     	; 0x5da <__addsf3+0x1e>
 5ce:	9f 3f       	cpi	r25, 0xFF	; 255
 5d0:	11 f4       	brne	.+4      	; 0x5d6 <__addsf3+0x1a>
 5d2:	1e f4       	brtc	.+6      	; 0x5da <__addsf3+0x1e>
 5d4:	5f c1       	rjmp	.+702    	; 0x894 <__fp_nan>
 5d6:	0e f4       	brtc	.+2      	; 0x5da <__addsf3+0x1e>
 5d8:	e0 95       	com	r30
 5da:	e7 fb       	bst	r30, 7
 5dc:	55 c1       	rjmp	.+682    	; 0x888 <__fp_inf>

000005de <__addsf3x>:
 5de:	e9 2f       	mov	r30, r25
 5e0:	a0 d1       	rcall	.+832    	; 0x922 <__fp_split3>
 5e2:	80 f3       	brcs	.-32     	; 0x5c4 <__addsf3+0x8>
 5e4:	ba 17       	cp	r27, r26
 5e6:	62 07       	cpc	r22, r18
 5e8:	73 07       	cpc	r23, r19
 5ea:	84 07       	cpc	r24, r20
 5ec:	95 07       	cpc	r25, r21
 5ee:	18 f0       	brcs	.+6      	; 0x5f6 <__addsf3x+0x18>
 5f0:	71 f4       	brne	.+28     	; 0x60e <__addsf3x+0x30>
 5f2:	9e f5       	brtc	.+102    	; 0x65a <__addsf3x+0x7c>
 5f4:	b8 c1       	rjmp	.+880    	; 0x966 <__fp_zero>
 5f6:	0e f4       	brtc	.+2      	; 0x5fa <__addsf3x+0x1c>
 5f8:	e0 95       	com	r30
 5fa:	0b 2e       	mov	r0, r27
 5fc:	ba 2f       	mov	r27, r26
 5fe:	a0 2d       	mov	r26, r0
 600:	0b 01       	movw	r0, r22
 602:	b9 01       	movw	r22, r18
 604:	90 01       	movw	r18, r0
 606:	0c 01       	movw	r0, r24
 608:	ca 01       	movw	r24, r20
 60a:	a0 01       	movw	r20, r0
 60c:	11 24       	eor	r1, r1
 60e:	ff 27       	eor	r31, r31
 610:	59 1b       	sub	r21, r25
 612:	99 f0       	breq	.+38     	; 0x63a <__addsf3x+0x5c>
 614:	59 3f       	cpi	r21, 0xF9	; 249
 616:	50 f4       	brcc	.+20     	; 0x62c <__addsf3x+0x4e>
 618:	50 3e       	cpi	r21, 0xE0	; 224
 61a:	68 f1       	brcs	.+90     	; 0x676 <__addsf3x+0x98>
 61c:	1a 16       	cp	r1, r26
 61e:	f0 40       	sbci	r31, 0x00	; 0
 620:	a2 2f       	mov	r26, r18
 622:	23 2f       	mov	r18, r19
 624:	34 2f       	mov	r19, r20
 626:	44 27       	eor	r20, r20
 628:	58 5f       	subi	r21, 0xF8	; 248
 62a:	f3 cf       	rjmp	.-26     	; 0x612 <__addsf3x+0x34>
 62c:	46 95       	lsr	r20
 62e:	37 95       	ror	r19
 630:	27 95       	ror	r18
 632:	a7 95       	ror	r26
 634:	f0 40       	sbci	r31, 0x00	; 0
 636:	53 95       	inc	r21
 638:	c9 f7       	brne	.-14     	; 0x62c <__addsf3x+0x4e>
 63a:	7e f4       	brtc	.+30     	; 0x65a <__addsf3x+0x7c>
 63c:	1f 16       	cp	r1, r31
 63e:	ba 0b       	sbc	r27, r26
 640:	62 0b       	sbc	r22, r18
 642:	73 0b       	sbc	r23, r19
 644:	84 0b       	sbc	r24, r20
 646:	ba f0       	brmi	.+46     	; 0x676 <__addsf3x+0x98>
 648:	91 50       	subi	r25, 0x01	; 1
 64a:	a1 f0       	breq	.+40     	; 0x674 <__addsf3x+0x96>
 64c:	ff 0f       	add	r31, r31
 64e:	bb 1f       	adc	r27, r27
 650:	66 1f       	adc	r22, r22
 652:	77 1f       	adc	r23, r23
 654:	88 1f       	adc	r24, r24
 656:	c2 f7       	brpl	.-16     	; 0x648 <__addsf3x+0x6a>
 658:	0e c0       	rjmp	.+28     	; 0x676 <__addsf3x+0x98>
 65a:	ba 0f       	add	r27, r26
 65c:	62 1f       	adc	r22, r18
 65e:	73 1f       	adc	r23, r19
 660:	84 1f       	adc	r24, r20
 662:	48 f4       	brcc	.+18     	; 0x676 <__addsf3x+0x98>
 664:	87 95       	ror	r24
 666:	77 95       	ror	r23
 668:	67 95       	ror	r22
 66a:	b7 95       	ror	r27
 66c:	f7 95       	ror	r31
 66e:	9e 3f       	cpi	r25, 0xFE	; 254
 670:	08 f0       	brcs	.+2      	; 0x674 <__addsf3x+0x96>
 672:	b3 cf       	rjmp	.-154    	; 0x5da <__addsf3+0x1e>
 674:	93 95       	inc	r25
 676:	88 0f       	add	r24, r24
 678:	08 f0       	brcs	.+2      	; 0x67c <__addsf3x+0x9e>
 67a:	99 27       	eor	r25, r25
 67c:	ee 0f       	add	r30, r30
 67e:	97 95       	ror	r25
 680:	87 95       	ror	r24
 682:	08 95       	ret

00000684 <__divsf3>:
 684:	0c d0       	rcall	.+24     	; 0x69e <__divsf3x>
 686:	3c c1       	rjmp	.+632    	; 0x900 <__fp_round>
 688:	34 d1       	rcall	.+616    	; 0x8f2 <__fp_pscB>
 68a:	40 f0       	brcs	.+16     	; 0x69c <__divsf3+0x18>
 68c:	2b d1       	rcall	.+598    	; 0x8e4 <__fp_pscA>
 68e:	30 f0       	brcs	.+12     	; 0x69c <__divsf3+0x18>
 690:	21 f4       	brne	.+8      	; 0x69a <__divsf3+0x16>
 692:	5f 3f       	cpi	r21, 0xFF	; 255
 694:	19 f0       	breq	.+6      	; 0x69c <__divsf3+0x18>
 696:	f8 c0       	rjmp	.+496    	; 0x888 <__fp_inf>
 698:	51 11       	cpse	r21, r1
 69a:	66 c1       	rjmp	.+716    	; 0x968 <__fp_szero>
 69c:	fb c0       	rjmp	.+502    	; 0x894 <__fp_nan>

0000069e <__divsf3x>:
 69e:	41 d1       	rcall	.+642    	; 0x922 <__fp_split3>
 6a0:	98 f3       	brcs	.-26     	; 0x688 <__divsf3+0x4>

000006a2 <__divsf3_pse>:
 6a2:	99 23       	and	r25, r25
 6a4:	c9 f3       	breq	.-14     	; 0x698 <__divsf3+0x14>
 6a6:	55 23       	and	r21, r21
 6a8:	b1 f3       	breq	.-20     	; 0x696 <__divsf3+0x12>
 6aa:	95 1b       	sub	r25, r21
 6ac:	55 0b       	sbc	r21, r21
 6ae:	bb 27       	eor	r27, r27
 6b0:	aa 27       	eor	r26, r26
 6b2:	62 17       	cp	r22, r18
 6b4:	73 07       	cpc	r23, r19
 6b6:	84 07       	cpc	r24, r20
 6b8:	38 f0       	brcs	.+14     	; 0x6c8 <__divsf3_pse+0x26>
 6ba:	9f 5f       	subi	r25, 0xFF	; 255
 6bc:	5f 4f       	sbci	r21, 0xFF	; 255
 6be:	22 0f       	add	r18, r18
 6c0:	33 1f       	adc	r19, r19
 6c2:	44 1f       	adc	r20, r20
 6c4:	aa 1f       	adc	r26, r26
 6c6:	a9 f3       	breq	.-22     	; 0x6b2 <__divsf3_pse+0x10>
 6c8:	33 d0       	rcall	.+102    	; 0x730 <__divsf3_pse+0x8e>
 6ca:	0e 2e       	mov	r0, r30
 6cc:	3a f0       	brmi	.+14     	; 0x6dc <__divsf3_pse+0x3a>
 6ce:	e0 e8       	ldi	r30, 0x80	; 128
 6d0:	30 d0       	rcall	.+96     	; 0x732 <__divsf3_pse+0x90>
 6d2:	91 50       	subi	r25, 0x01	; 1
 6d4:	50 40       	sbci	r21, 0x00	; 0
 6d6:	e6 95       	lsr	r30
 6d8:	00 1c       	adc	r0, r0
 6da:	ca f7       	brpl	.-14     	; 0x6ce <__divsf3_pse+0x2c>
 6dc:	29 d0       	rcall	.+82     	; 0x730 <__divsf3_pse+0x8e>
 6de:	fe 2f       	mov	r31, r30
 6e0:	27 d0       	rcall	.+78     	; 0x730 <__divsf3_pse+0x8e>
 6e2:	66 0f       	add	r22, r22
 6e4:	77 1f       	adc	r23, r23
 6e6:	88 1f       	adc	r24, r24
 6e8:	bb 1f       	adc	r27, r27
 6ea:	26 17       	cp	r18, r22
 6ec:	37 07       	cpc	r19, r23
 6ee:	48 07       	cpc	r20, r24
 6f0:	ab 07       	cpc	r26, r27
 6f2:	b0 e8       	ldi	r27, 0x80	; 128
 6f4:	09 f0       	breq	.+2      	; 0x6f8 <__divsf3_pse+0x56>
 6f6:	bb 0b       	sbc	r27, r27
 6f8:	80 2d       	mov	r24, r0
 6fa:	bf 01       	movw	r22, r30
 6fc:	ff 27       	eor	r31, r31
 6fe:	93 58       	subi	r25, 0x83	; 131
 700:	5f 4f       	sbci	r21, 0xFF	; 255
 702:	2a f0       	brmi	.+10     	; 0x70e <__divsf3_pse+0x6c>
 704:	9e 3f       	cpi	r25, 0xFE	; 254
 706:	51 05       	cpc	r21, r1
 708:	68 f0       	brcs	.+26     	; 0x724 <__divsf3_pse+0x82>
 70a:	be c0       	rjmp	.+380    	; 0x888 <__fp_inf>
 70c:	2d c1       	rjmp	.+602    	; 0x968 <__fp_szero>
 70e:	5f 3f       	cpi	r21, 0xFF	; 255
 710:	ec f3       	brlt	.-6      	; 0x70c <__divsf3_pse+0x6a>
 712:	98 3e       	cpi	r25, 0xE8	; 232
 714:	dc f3       	brlt	.-10     	; 0x70c <__divsf3_pse+0x6a>
 716:	86 95       	lsr	r24
 718:	77 95       	ror	r23
 71a:	67 95       	ror	r22
 71c:	b7 95       	ror	r27
 71e:	f7 95       	ror	r31
 720:	9f 5f       	subi	r25, 0xFF	; 255
 722:	c9 f7       	brne	.-14     	; 0x716 <__divsf3_pse+0x74>
 724:	88 0f       	add	r24, r24
 726:	91 1d       	adc	r25, r1
 728:	96 95       	lsr	r25
 72a:	87 95       	ror	r24
 72c:	97 f9       	bld	r25, 7
 72e:	08 95       	ret
 730:	e1 e0       	ldi	r30, 0x01	; 1
 732:	66 0f       	add	r22, r22
 734:	77 1f       	adc	r23, r23
 736:	88 1f       	adc	r24, r24
 738:	bb 1f       	adc	r27, r27
 73a:	62 17       	cp	r22, r18
 73c:	73 07       	cpc	r23, r19
 73e:	84 07       	cpc	r24, r20
 740:	ba 07       	cpc	r27, r26
 742:	20 f0       	brcs	.+8      	; 0x74c <__divsf3_pse+0xaa>
 744:	62 1b       	sub	r22, r18
 746:	73 0b       	sbc	r23, r19
 748:	84 0b       	sbc	r24, r20
 74a:	ba 0b       	sbc	r27, r26
 74c:	ee 1f       	adc	r30, r30
 74e:	88 f7       	brcc	.-30     	; 0x732 <__divsf3_pse+0x90>
 750:	e0 95       	com	r30
 752:	08 95       	ret
 754:	19 f4       	brne	.+6      	; 0x75c <__divsf3_pse+0xba>
 756:	0e f0       	brts	.+2      	; 0x75a <__divsf3_pse+0xb8>
 758:	97 c0       	rjmp	.+302    	; 0x888 <__fp_inf>
 75a:	05 c1       	rjmp	.+522    	; 0x966 <__fp_zero>
 75c:	9b c0       	rjmp	.+310    	; 0x894 <__fp_nan>

0000075e <exp>:
 75e:	e9 d0       	rcall	.+466    	; 0x932 <__fp_splitA>
 760:	c8 f3       	brcs	.-14     	; 0x754 <__divsf3_pse+0xb2>
 762:	96 38       	cpi	r25, 0x86	; 134
 764:	c0 f7       	brcc	.-16     	; 0x756 <__divsf3_pse+0xb4>
 766:	07 f8       	bld	r0, 7
 768:	0f 92       	push	r0
 76a:	e8 94       	clt
 76c:	2b e3       	ldi	r18, 0x3B	; 59
 76e:	3a ea       	ldi	r19, 0xAA	; 170
 770:	48 eb       	ldi	r20, 0xB8	; 184
 772:	5f e7       	ldi	r21, 0x7F	; 127
 774:	81 d1       	rcall	.+770    	; 0xa78 <__mulsf3_pse>
 776:	0f 92       	push	r0
 778:	0f 92       	push	r0
 77a:	0f 92       	push	r0
 77c:	4d b7       	in	r20, 0x3d	; 61
 77e:	5e b7       	in	r21, 0x3e	; 62
 780:	0f 92       	push	r0
 782:	39 d1       	rcall	.+626    	; 0x9f6 <modf>
 784:	e6 e2       	ldi	r30, 0x26	; 38
 786:	f0 e0       	ldi	r31, 0x00	; 0
 788:	88 d0       	rcall	.+272    	; 0x89a <__fp_powser>
 78a:	4f 91       	pop	r20
 78c:	5f 91       	pop	r21
 78e:	ef 91       	pop	r30
 790:	ff 91       	pop	r31
 792:	e5 95       	asr	r30
 794:	ee 1f       	adc	r30, r30
 796:	ff 1f       	adc	r31, r31
 798:	49 f0       	breq	.+18     	; 0x7ac <exp+0x4e>
 79a:	fe 57       	subi	r31, 0x7E	; 126
 79c:	e0 68       	ori	r30, 0x80	; 128
 79e:	44 27       	eor	r20, r20
 7a0:	ee 0f       	add	r30, r30
 7a2:	44 1f       	adc	r20, r20
 7a4:	fa 95       	dec	r31
 7a6:	e1 f7       	brne	.-8      	; 0x7a0 <exp+0x42>
 7a8:	41 95       	neg	r20
 7aa:	55 0b       	sbc	r21, r21
 7ac:	f0 d0       	rcall	.+480    	; 0x98e <ldexp>
 7ae:	0f 90       	pop	r0
 7b0:	07 fe       	sbrs	r0, 7
 7b2:	e4 c0       	rjmp	.+456    	; 0x97c <inverse>
 7b4:	08 95       	ret

000007b6 <__fixunssfsi>:
 7b6:	bd d0       	rcall	.+378    	; 0x932 <__fp_splitA>
 7b8:	88 f0       	brcs	.+34     	; 0x7dc <__fixunssfsi+0x26>
 7ba:	9f 57       	subi	r25, 0x7F	; 127
 7bc:	90 f0       	brcs	.+36     	; 0x7e2 <__fixunssfsi+0x2c>
 7be:	b9 2f       	mov	r27, r25
 7c0:	99 27       	eor	r25, r25
 7c2:	b7 51       	subi	r27, 0x17	; 23
 7c4:	a0 f0       	brcs	.+40     	; 0x7ee <__fixunssfsi+0x38>
 7c6:	d1 f0       	breq	.+52     	; 0x7fc <__fixunssfsi+0x46>
 7c8:	66 0f       	add	r22, r22
 7ca:	77 1f       	adc	r23, r23
 7cc:	88 1f       	adc	r24, r24
 7ce:	99 1f       	adc	r25, r25
 7d0:	1a f0       	brmi	.+6      	; 0x7d8 <__fixunssfsi+0x22>
 7d2:	ba 95       	dec	r27
 7d4:	c9 f7       	brne	.-14     	; 0x7c8 <__fixunssfsi+0x12>
 7d6:	12 c0       	rjmp	.+36     	; 0x7fc <__fixunssfsi+0x46>
 7d8:	b1 30       	cpi	r27, 0x01	; 1
 7da:	81 f0       	breq	.+32     	; 0x7fc <__fixunssfsi+0x46>
 7dc:	c4 d0       	rcall	.+392    	; 0x966 <__fp_zero>
 7de:	b1 e0       	ldi	r27, 0x01	; 1
 7e0:	08 95       	ret
 7e2:	c1 c0       	rjmp	.+386    	; 0x966 <__fp_zero>
 7e4:	67 2f       	mov	r22, r23
 7e6:	78 2f       	mov	r23, r24
 7e8:	88 27       	eor	r24, r24
 7ea:	b8 5f       	subi	r27, 0xF8	; 248
 7ec:	39 f0       	breq	.+14     	; 0x7fc <__fixunssfsi+0x46>
 7ee:	b9 3f       	cpi	r27, 0xF9	; 249
 7f0:	cc f3       	brlt	.-14     	; 0x7e4 <__fixunssfsi+0x2e>
 7f2:	86 95       	lsr	r24
 7f4:	77 95       	ror	r23
 7f6:	67 95       	ror	r22
 7f8:	b3 95       	inc	r27
 7fa:	d9 f7       	brne	.-10     	; 0x7f2 <__fixunssfsi+0x3c>
 7fc:	3e f4       	brtc	.+14     	; 0x80c <__fixunssfsi+0x56>
 7fe:	90 95       	com	r25
 800:	80 95       	com	r24
 802:	70 95       	com	r23
 804:	61 95       	neg	r22
 806:	7f 4f       	sbci	r23, 0xFF	; 255
 808:	8f 4f       	sbci	r24, 0xFF	; 255
 80a:	9f 4f       	sbci	r25, 0xFF	; 255
 80c:	08 95       	ret

0000080e <__floatunsisf>:
 80e:	e8 94       	clt
 810:	09 c0       	rjmp	.+18     	; 0x824 <__floatsisf+0x12>

00000812 <__floatsisf>:
 812:	97 fb       	bst	r25, 7
 814:	3e f4       	brtc	.+14     	; 0x824 <__floatsisf+0x12>
 816:	90 95       	com	r25
 818:	80 95       	com	r24
 81a:	70 95       	com	r23
 81c:	61 95       	neg	r22
 81e:	7f 4f       	sbci	r23, 0xFF	; 255
 820:	8f 4f       	sbci	r24, 0xFF	; 255
 822:	9f 4f       	sbci	r25, 0xFF	; 255
 824:	99 23       	and	r25, r25
 826:	a9 f0       	breq	.+42     	; 0x852 <__floatsisf+0x40>
 828:	f9 2f       	mov	r31, r25
 82a:	96 e9       	ldi	r25, 0x96	; 150
 82c:	bb 27       	eor	r27, r27
 82e:	93 95       	inc	r25
 830:	f6 95       	lsr	r31
 832:	87 95       	ror	r24
 834:	77 95       	ror	r23
 836:	67 95       	ror	r22
 838:	b7 95       	ror	r27
 83a:	f1 11       	cpse	r31, r1
 83c:	f8 cf       	rjmp	.-16     	; 0x82e <__floatsisf+0x1c>
 83e:	fa f4       	brpl	.+62     	; 0x87e <__floatsisf+0x6c>
 840:	bb 0f       	add	r27, r27
 842:	11 f4       	brne	.+4      	; 0x848 <__floatsisf+0x36>
 844:	60 ff       	sbrs	r22, 0
 846:	1b c0       	rjmp	.+54     	; 0x87e <__floatsisf+0x6c>
 848:	6f 5f       	subi	r22, 0xFF	; 255
 84a:	7f 4f       	sbci	r23, 0xFF	; 255
 84c:	8f 4f       	sbci	r24, 0xFF	; 255
 84e:	9f 4f       	sbci	r25, 0xFF	; 255
 850:	16 c0       	rjmp	.+44     	; 0x87e <__floatsisf+0x6c>
 852:	88 23       	and	r24, r24
 854:	11 f0       	breq	.+4      	; 0x85a <__floatsisf+0x48>
 856:	96 e9       	ldi	r25, 0x96	; 150
 858:	11 c0       	rjmp	.+34     	; 0x87c <__floatsisf+0x6a>
 85a:	77 23       	and	r23, r23
 85c:	21 f0       	breq	.+8      	; 0x866 <__floatsisf+0x54>
 85e:	9e e8       	ldi	r25, 0x8E	; 142
 860:	87 2f       	mov	r24, r23
 862:	76 2f       	mov	r23, r22
 864:	05 c0       	rjmp	.+10     	; 0x870 <__floatsisf+0x5e>
 866:	66 23       	and	r22, r22
 868:	71 f0       	breq	.+28     	; 0x886 <__floatsisf+0x74>
 86a:	96 e8       	ldi	r25, 0x86	; 134
 86c:	86 2f       	mov	r24, r22
 86e:	70 e0       	ldi	r23, 0x00	; 0
 870:	60 e0       	ldi	r22, 0x00	; 0
 872:	2a f0       	brmi	.+10     	; 0x87e <__floatsisf+0x6c>
 874:	9a 95       	dec	r25
 876:	66 0f       	add	r22, r22
 878:	77 1f       	adc	r23, r23
 87a:	88 1f       	adc	r24, r24
 87c:	da f7       	brpl	.-10     	; 0x874 <__floatsisf+0x62>
 87e:	88 0f       	add	r24, r24
 880:	96 95       	lsr	r25
 882:	87 95       	ror	r24
 884:	97 f9       	bld	r25, 7
 886:	08 95       	ret

00000888 <__fp_inf>:
 888:	97 f9       	bld	r25, 7
 88a:	9f 67       	ori	r25, 0x7F	; 127
 88c:	80 e8       	ldi	r24, 0x80	; 128
 88e:	70 e0       	ldi	r23, 0x00	; 0
 890:	60 e0       	ldi	r22, 0x00	; 0
 892:	08 95       	ret

00000894 <__fp_nan>:
 894:	9f ef       	ldi	r25, 0xFF	; 255
 896:	80 ec       	ldi	r24, 0xC0	; 192
 898:	08 95       	ret

0000089a <__fp_powser>:
 89a:	df 93       	push	r29
 89c:	cf 93       	push	r28
 89e:	1f 93       	push	r17
 8a0:	0f 93       	push	r16
 8a2:	ff 92       	push	r15
 8a4:	ef 92       	push	r14
 8a6:	df 92       	push	r13
 8a8:	7b 01       	movw	r14, r22
 8aa:	8c 01       	movw	r16, r24
 8ac:	68 94       	set
 8ae:	05 c0       	rjmp	.+10     	; 0x8ba <__fp_powser+0x20>
 8b0:	da 2e       	mov	r13, r26
 8b2:	ef 01       	movw	r28, r30
 8b4:	df d0       	rcall	.+446    	; 0xa74 <__mulsf3x>
 8b6:	fe 01       	movw	r30, r28
 8b8:	e8 94       	clt
 8ba:	a5 91       	lpm	r26, Z+
 8bc:	25 91       	lpm	r18, Z+
 8be:	35 91       	lpm	r19, Z+
 8c0:	45 91       	lpm	r20, Z+
 8c2:	55 91       	lpm	r21, Z+
 8c4:	ae f3       	brts	.-22     	; 0x8b0 <__fp_powser+0x16>
 8c6:	ef 01       	movw	r28, r30
 8c8:	8a de       	rcall	.-748    	; 0x5de <__addsf3x>
 8ca:	fe 01       	movw	r30, r28
 8cc:	97 01       	movw	r18, r14
 8ce:	a8 01       	movw	r20, r16
 8d0:	da 94       	dec	r13
 8d2:	79 f7       	brne	.-34     	; 0x8b2 <__fp_powser+0x18>
 8d4:	df 90       	pop	r13
 8d6:	ef 90       	pop	r14
 8d8:	ff 90       	pop	r15
 8da:	0f 91       	pop	r16
 8dc:	1f 91       	pop	r17
 8de:	cf 91       	pop	r28
 8e0:	df 91       	pop	r29
 8e2:	08 95       	ret

000008e4 <__fp_pscA>:
 8e4:	00 24       	eor	r0, r0
 8e6:	0a 94       	dec	r0
 8e8:	16 16       	cp	r1, r22
 8ea:	17 06       	cpc	r1, r23
 8ec:	18 06       	cpc	r1, r24
 8ee:	09 06       	cpc	r0, r25
 8f0:	08 95       	ret

000008f2 <__fp_pscB>:
 8f2:	00 24       	eor	r0, r0
 8f4:	0a 94       	dec	r0
 8f6:	12 16       	cp	r1, r18
 8f8:	13 06       	cpc	r1, r19
 8fa:	14 06       	cpc	r1, r20
 8fc:	05 06       	cpc	r0, r21
 8fe:	08 95       	ret

00000900 <__fp_round>:
 900:	09 2e       	mov	r0, r25
 902:	03 94       	inc	r0
 904:	00 0c       	add	r0, r0
 906:	11 f4       	brne	.+4      	; 0x90c <__fp_round+0xc>
 908:	88 23       	and	r24, r24
 90a:	52 f0       	brmi	.+20     	; 0x920 <__fp_round+0x20>
 90c:	bb 0f       	add	r27, r27
 90e:	40 f4       	brcc	.+16     	; 0x920 <__fp_round+0x20>
 910:	bf 2b       	or	r27, r31
 912:	11 f4       	brne	.+4      	; 0x918 <__fp_round+0x18>
 914:	60 ff       	sbrs	r22, 0
 916:	04 c0       	rjmp	.+8      	; 0x920 <__fp_round+0x20>
 918:	6f 5f       	subi	r22, 0xFF	; 255
 91a:	7f 4f       	sbci	r23, 0xFF	; 255
 91c:	8f 4f       	sbci	r24, 0xFF	; 255
 91e:	9f 4f       	sbci	r25, 0xFF	; 255
 920:	08 95       	ret

00000922 <__fp_split3>:
 922:	57 fd       	sbrc	r21, 7
 924:	90 58       	subi	r25, 0x80	; 128
 926:	44 0f       	add	r20, r20
 928:	55 1f       	adc	r21, r21
 92a:	59 f0       	breq	.+22     	; 0x942 <__fp_splitA+0x10>
 92c:	5f 3f       	cpi	r21, 0xFF	; 255
 92e:	71 f0       	breq	.+28     	; 0x94c <__fp_splitA+0x1a>
 930:	47 95       	ror	r20

00000932 <__fp_splitA>:
 932:	88 0f       	add	r24, r24
 934:	97 fb       	bst	r25, 7
 936:	99 1f       	adc	r25, r25
 938:	61 f0       	breq	.+24     	; 0x952 <__fp_splitA+0x20>
 93a:	9f 3f       	cpi	r25, 0xFF	; 255
 93c:	79 f0       	breq	.+30     	; 0x95c <__fp_splitA+0x2a>
 93e:	87 95       	ror	r24
 940:	08 95       	ret
 942:	12 16       	cp	r1, r18
 944:	13 06       	cpc	r1, r19
 946:	14 06       	cpc	r1, r20
 948:	55 1f       	adc	r21, r21
 94a:	f2 cf       	rjmp	.-28     	; 0x930 <__fp_split3+0xe>
 94c:	46 95       	lsr	r20
 94e:	f1 df       	rcall	.-30     	; 0x932 <__fp_splitA>
 950:	08 c0       	rjmp	.+16     	; 0x962 <__fp_splitA+0x30>
 952:	16 16       	cp	r1, r22
 954:	17 06       	cpc	r1, r23
 956:	18 06       	cpc	r1, r24
 958:	99 1f       	adc	r25, r25
 95a:	f1 cf       	rjmp	.-30     	; 0x93e <__fp_splitA+0xc>
 95c:	86 95       	lsr	r24
 95e:	71 05       	cpc	r23, r1
 960:	61 05       	cpc	r22, r1
 962:	08 94       	sec
 964:	08 95       	ret

00000966 <__fp_zero>:
 966:	e8 94       	clt

00000968 <__fp_szero>:
 968:	bb 27       	eor	r27, r27
 96a:	66 27       	eor	r22, r22
 96c:	77 27       	eor	r23, r23
 96e:	cb 01       	movw	r24, r22
 970:	97 f9       	bld	r25, 7
 972:	08 95       	ret

00000974 <__gesf2>:
 974:	22 d1       	rcall	.+580    	; 0xbba <__fp_cmp>
 976:	08 f4       	brcc	.+2      	; 0x97a <__gesf2+0x6>
 978:	8f ef       	ldi	r24, 0xFF	; 255
 97a:	08 95       	ret

0000097c <inverse>:
 97c:	9b 01       	movw	r18, r22
 97e:	ac 01       	movw	r20, r24
 980:	60 e0       	ldi	r22, 0x00	; 0
 982:	70 e0       	ldi	r23, 0x00	; 0
 984:	80 e8       	ldi	r24, 0x80	; 128
 986:	9f e3       	ldi	r25, 0x3F	; 63
 988:	7d ce       	rjmp	.-774    	; 0x684 <__divsf3>
 98a:	7e cf       	rjmp	.-260    	; 0x888 <__fp_inf>
 98c:	3a c1       	rjmp	.+628    	; 0xc02 <__fp_mpack>

0000098e <ldexp>:
 98e:	d1 df       	rcall	.-94     	; 0x932 <__fp_splitA>
 990:	e8 f3       	brcs	.-6      	; 0x98c <inverse+0x10>
 992:	99 23       	and	r25, r25
 994:	d9 f3       	breq	.-10     	; 0x98c <inverse+0x10>
 996:	94 0f       	add	r25, r20
 998:	51 1d       	adc	r21, r1
 99a:	bb f3       	brvs	.-18     	; 0x98a <inverse+0xe>
 99c:	91 50       	subi	r25, 0x01	; 1
 99e:	50 40       	sbci	r21, 0x00	; 0
 9a0:	94 f0       	brlt	.+36     	; 0x9c6 <ldexp+0x38>
 9a2:	59 f0       	breq	.+22     	; 0x9ba <ldexp+0x2c>
 9a4:	88 23       	and	r24, r24
 9a6:	32 f0       	brmi	.+12     	; 0x9b4 <ldexp+0x26>
 9a8:	66 0f       	add	r22, r22
 9aa:	77 1f       	adc	r23, r23
 9ac:	88 1f       	adc	r24, r24
 9ae:	91 50       	subi	r25, 0x01	; 1
 9b0:	50 40       	sbci	r21, 0x00	; 0
 9b2:	c1 f7       	brne	.-16     	; 0x9a4 <ldexp+0x16>
 9b4:	9e 3f       	cpi	r25, 0xFE	; 254
 9b6:	51 05       	cpc	r21, r1
 9b8:	44 f7       	brge	.-48     	; 0x98a <inverse+0xe>
 9ba:	88 0f       	add	r24, r24
 9bc:	91 1d       	adc	r25, r1
 9be:	96 95       	lsr	r25
 9c0:	87 95       	ror	r24
 9c2:	97 f9       	bld	r25, 7
 9c4:	08 95       	ret
 9c6:	5f 3f       	cpi	r21, 0xFF	; 255
 9c8:	ac f0       	brlt	.+42     	; 0x9f4 <ldexp+0x66>
 9ca:	98 3e       	cpi	r25, 0xE8	; 232
 9cc:	9c f0       	brlt	.+38     	; 0x9f4 <ldexp+0x66>
 9ce:	bb 27       	eor	r27, r27
 9d0:	86 95       	lsr	r24
 9d2:	77 95       	ror	r23
 9d4:	67 95       	ror	r22
 9d6:	b7 95       	ror	r27
 9d8:	08 f4       	brcc	.+2      	; 0x9dc <ldexp+0x4e>
 9da:	b1 60       	ori	r27, 0x01	; 1
 9dc:	93 95       	inc	r25
 9de:	c1 f7       	brne	.-16     	; 0x9d0 <ldexp+0x42>
 9e0:	bb 0f       	add	r27, r27
 9e2:	58 f7       	brcc	.-42     	; 0x9ba <ldexp+0x2c>
 9e4:	11 f4       	brne	.+4      	; 0x9ea <ldexp+0x5c>
 9e6:	60 ff       	sbrs	r22, 0
 9e8:	e8 cf       	rjmp	.-48     	; 0x9ba <ldexp+0x2c>
 9ea:	6f 5f       	subi	r22, 0xFF	; 255
 9ec:	7f 4f       	sbci	r23, 0xFF	; 255
 9ee:	8f 4f       	sbci	r24, 0xFF	; 255
 9f0:	9f 4f       	sbci	r25, 0xFF	; 255
 9f2:	e3 cf       	rjmp	.-58     	; 0x9ba <ldexp+0x2c>
 9f4:	b9 cf       	rjmp	.-142    	; 0x968 <__fp_szero>

000009f6 <modf>:
 9f6:	fa 01       	movw	r30, r20
 9f8:	dc 01       	movw	r26, r24
 9fa:	aa 0f       	add	r26, r26
 9fc:	bb 1f       	adc	r27, r27
 9fe:	9b 01       	movw	r18, r22
 a00:	ac 01       	movw	r20, r24
 a02:	bf 57       	subi	r27, 0x7F	; 127
 a04:	28 f4       	brcc	.+10     	; 0xa10 <modf+0x1a>
 a06:	22 27       	eor	r18, r18
 a08:	33 27       	eor	r19, r19
 a0a:	44 27       	eor	r20, r20
 a0c:	50 78       	andi	r21, 0x80	; 128
 a0e:	1f c0       	rjmp	.+62     	; 0xa4e <modf+0x58>
 a10:	b7 51       	subi	r27, 0x17	; 23
 a12:	88 f4       	brcc	.+34     	; 0xa36 <modf+0x40>
 a14:	ab 2f       	mov	r26, r27
 a16:	00 24       	eor	r0, r0
 a18:	46 95       	lsr	r20
 a1a:	37 95       	ror	r19
 a1c:	27 95       	ror	r18
 a1e:	01 1c       	adc	r0, r1
 a20:	a3 95       	inc	r26
 a22:	d2 f3       	brmi	.-12     	; 0xa18 <modf+0x22>
 a24:	00 20       	and	r0, r0
 a26:	69 f0       	breq	.+26     	; 0xa42 <modf+0x4c>
 a28:	22 0f       	add	r18, r18
 a2a:	33 1f       	adc	r19, r19
 a2c:	44 1f       	adc	r20, r20
 a2e:	b3 95       	inc	r27
 a30:	da f3       	brmi	.-10     	; 0xa28 <modf+0x32>
 a32:	0d d0       	rcall	.+26     	; 0xa4e <modf+0x58>
 a34:	c2 cd       	rjmp	.-1148   	; 0x5ba <__subsf3>
 a36:	61 30       	cpi	r22, 0x01	; 1
 a38:	71 05       	cpc	r23, r1
 a3a:	a0 e8       	ldi	r26, 0x80	; 128
 a3c:	8a 07       	cpc	r24, r26
 a3e:	b9 46       	sbci	r27, 0x69	; 105
 a40:	30 f4       	brcc	.+12     	; 0xa4e <modf+0x58>
 a42:	9b 01       	movw	r18, r22
 a44:	ac 01       	movw	r20, r24
 a46:	66 27       	eor	r22, r22
 a48:	77 27       	eor	r23, r23
 a4a:	88 27       	eor	r24, r24
 a4c:	90 78       	andi	r25, 0x80	; 128
 a4e:	30 96       	adiw	r30, 0x00	; 0
 a50:	21 f0       	breq	.+8      	; 0xa5a <modf+0x64>
 a52:	20 83       	st	Z, r18
 a54:	31 83       	std	Z+1, r19	; 0x01
 a56:	42 83       	std	Z+2, r20	; 0x02
 a58:	53 83       	std	Z+3, r21	; 0x03
 a5a:	08 95       	ret

00000a5c <__mulsf3>:
 a5c:	0b d0       	rcall	.+22     	; 0xa74 <__mulsf3x>
 a5e:	50 cf       	rjmp	.-352    	; 0x900 <__fp_round>
 a60:	41 df       	rcall	.-382    	; 0x8e4 <__fp_pscA>
 a62:	28 f0       	brcs	.+10     	; 0xa6e <__mulsf3+0x12>
 a64:	46 df       	rcall	.-372    	; 0x8f2 <__fp_pscB>
 a66:	18 f0       	brcs	.+6      	; 0xa6e <__mulsf3+0x12>
 a68:	95 23       	and	r25, r21
 a6a:	09 f0       	breq	.+2      	; 0xa6e <__mulsf3+0x12>
 a6c:	0d cf       	rjmp	.-486    	; 0x888 <__fp_inf>
 a6e:	12 cf       	rjmp	.-476    	; 0x894 <__fp_nan>
 a70:	11 24       	eor	r1, r1
 a72:	7a cf       	rjmp	.-268    	; 0x968 <__fp_szero>

00000a74 <__mulsf3x>:
 a74:	56 df       	rcall	.-340    	; 0x922 <__fp_split3>
 a76:	a0 f3       	brcs	.-24     	; 0xa60 <__mulsf3+0x4>

00000a78 <__mulsf3_pse>:
 a78:	95 9f       	mul	r25, r21
 a7a:	d1 f3       	breq	.-12     	; 0xa70 <__mulsf3+0x14>
 a7c:	95 0f       	add	r25, r21
 a7e:	50 e0       	ldi	r21, 0x00	; 0
 a80:	55 1f       	adc	r21, r21
 a82:	62 9f       	mul	r22, r18
 a84:	f0 01       	movw	r30, r0
 a86:	72 9f       	mul	r23, r18
 a88:	bb 27       	eor	r27, r27
 a8a:	f0 0d       	add	r31, r0
 a8c:	b1 1d       	adc	r27, r1
 a8e:	63 9f       	mul	r22, r19
 a90:	aa 27       	eor	r26, r26
 a92:	f0 0d       	add	r31, r0
 a94:	b1 1d       	adc	r27, r1
 a96:	aa 1f       	adc	r26, r26
 a98:	64 9f       	mul	r22, r20
 a9a:	66 27       	eor	r22, r22
 a9c:	b0 0d       	add	r27, r0
 a9e:	a1 1d       	adc	r26, r1
 aa0:	66 1f       	adc	r22, r22
 aa2:	82 9f       	mul	r24, r18
 aa4:	22 27       	eor	r18, r18
 aa6:	b0 0d       	add	r27, r0
 aa8:	a1 1d       	adc	r26, r1
 aaa:	62 1f       	adc	r22, r18
 aac:	73 9f       	mul	r23, r19
 aae:	b0 0d       	add	r27, r0
 ab0:	a1 1d       	adc	r26, r1
 ab2:	62 1f       	adc	r22, r18
 ab4:	83 9f       	mul	r24, r19
 ab6:	a0 0d       	add	r26, r0
 ab8:	61 1d       	adc	r22, r1
 aba:	22 1f       	adc	r18, r18
 abc:	74 9f       	mul	r23, r20
 abe:	33 27       	eor	r19, r19
 ac0:	a0 0d       	add	r26, r0
 ac2:	61 1d       	adc	r22, r1
 ac4:	23 1f       	adc	r18, r19
 ac6:	84 9f       	mul	r24, r20
 ac8:	60 0d       	add	r22, r0
 aca:	21 1d       	adc	r18, r1
 acc:	82 2f       	mov	r24, r18
 ace:	76 2f       	mov	r23, r22
 ad0:	6a 2f       	mov	r22, r26
 ad2:	11 24       	eor	r1, r1
 ad4:	9f 57       	subi	r25, 0x7F	; 127
 ad6:	50 40       	sbci	r21, 0x00	; 0
 ad8:	8a f0       	brmi	.+34     	; 0xafc <__mulsf3_pse+0x84>
 ada:	e1 f0       	breq	.+56     	; 0xb14 <__mulsf3_pse+0x9c>
 adc:	88 23       	and	r24, r24
 ade:	4a f0       	brmi	.+18     	; 0xaf2 <__mulsf3_pse+0x7a>
 ae0:	ee 0f       	add	r30, r30
 ae2:	ff 1f       	adc	r31, r31
 ae4:	bb 1f       	adc	r27, r27
 ae6:	66 1f       	adc	r22, r22
 ae8:	77 1f       	adc	r23, r23
 aea:	88 1f       	adc	r24, r24
 aec:	91 50       	subi	r25, 0x01	; 1
 aee:	50 40       	sbci	r21, 0x00	; 0
 af0:	a9 f7       	brne	.-22     	; 0xadc <__mulsf3_pse+0x64>
 af2:	9e 3f       	cpi	r25, 0xFE	; 254
 af4:	51 05       	cpc	r21, r1
 af6:	70 f0       	brcs	.+28     	; 0xb14 <__mulsf3_pse+0x9c>
 af8:	c7 ce       	rjmp	.-626    	; 0x888 <__fp_inf>
 afa:	36 cf       	rjmp	.-404    	; 0x968 <__fp_szero>
 afc:	5f 3f       	cpi	r21, 0xFF	; 255
 afe:	ec f3       	brlt	.-6      	; 0xafa <__mulsf3_pse+0x82>
 b00:	98 3e       	cpi	r25, 0xE8	; 232
 b02:	dc f3       	brlt	.-10     	; 0xafa <__mulsf3_pse+0x82>
 b04:	86 95       	lsr	r24
 b06:	77 95       	ror	r23
 b08:	67 95       	ror	r22
 b0a:	b7 95       	ror	r27
 b0c:	f7 95       	ror	r31
 b0e:	e7 95       	ror	r30
 b10:	9f 5f       	subi	r25, 0xFF	; 255
 b12:	c1 f7       	brne	.-16     	; 0xb04 <__mulsf3_pse+0x8c>
 b14:	fe 2b       	or	r31, r30
 b16:	88 0f       	add	r24, r24
 b18:	91 1d       	adc	r25, r1
 b1a:	96 95       	lsr	r25
 b1c:	87 95       	ror	r24
 b1e:	97 f9       	bld	r25, 7
 b20:	08 95       	ret

00000b22 <pow>:
 b22:	fa 01       	movw	r30, r20
 b24:	ee 0f       	add	r30, r30
 b26:	ff 1f       	adc	r31, r31
 b28:	30 96       	adiw	r30, 0x00	; 0
 b2a:	21 05       	cpc	r18, r1
 b2c:	31 05       	cpc	r19, r1
 b2e:	99 f1       	breq	.+102    	; 0xb96 <pow+0x74>
 b30:	61 15       	cp	r22, r1
 b32:	71 05       	cpc	r23, r1
 b34:	61 f4       	brne	.+24     	; 0xb4e <pow+0x2c>
 b36:	80 38       	cpi	r24, 0x80	; 128
 b38:	bf e3       	ldi	r27, 0x3F	; 63
 b3a:	9b 07       	cpc	r25, r27
 b3c:	49 f1       	breq	.+82     	; 0xb90 <pow+0x6e>
 b3e:	68 94       	set
 b40:	90 38       	cpi	r25, 0x80	; 128
 b42:	81 05       	cpc	r24, r1
 b44:	61 f0       	breq	.+24     	; 0xb5e <pow+0x3c>
 b46:	80 38       	cpi	r24, 0x80	; 128
 b48:	bf ef       	ldi	r27, 0xFF	; 255
 b4a:	9b 07       	cpc	r25, r27
 b4c:	41 f0       	breq	.+16     	; 0xb5e <pow+0x3c>
 b4e:	99 23       	and	r25, r25
 b50:	42 f5       	brpl	.+80     	; 0xba2 <pow+0x80>
 b52:	ff 3f       	cpi	r31, 0xFF	; 255
 b54:	e1 05       	cpc	r30, r1
 b56:	31 05       	cpc	r19, r1
 b58:	21 05       	cpc	r18, r1
 b5a:	11 f1       	breq	.+68     	; 0xba0 <pow+0x7e>
 b5c:	e8 94       	clt
 b5e:	08 94       	sec
 b60:	e7 95       	ror	r30
 b62:	d9 01       	movw	r26, r18
 b64:	aa 23       	and	r26, r26
 b66:	29 f4       	brne	.+10     	; 0xb72 <pow+0x50>
 b68:	ab 2f       	mov	r26, r27
 b6a:	be 2f       	mov	r27, r30
 b6c:	f8 5f       	subi	r31, 0xF8	; 248
 b6e:	d0 f3       	brcs	.-12     	; 0xb64 <pow+0x42>
 b70:	10 c0       	rjmp	.+32     	; 0xb92 <pow+0x70>
 b72:	ff 5f       	subi	r31, 0xFF	; 255
 b74:	70 f4       	brcc	.+28     	; 0xb92 <pow+0x70>
 b76:	a6 95       	lsr	r26
 b78:	e0 f7       	brcc	.-8      	; 0xb72 <pow+0x50>
 b7a:	f7 39       	cpi	r31, 0x97	; 151
 b7c:	50 f0       	brcs	.+20     	; 0xb92 <pow+0x70>
 b7e:	19 f0       	breq	.+6      	; 0xb86 <pow+0x64>
 b80:	ff 3a       	cpi	r31, 0xAF	; 175
 b82:	38 f4       	brcc	.+14     	; 0xb92 <pow+0x70>
 b84:	9f 77       	andi	r25, 0x7F	; 127
 b86:	9f 93       	push	r25
 b88:	0c d0       	rcall	.+24     	; 0xba2 <pow+0x80>
 b8a:	0f 90       	pop	r0
 b8c:	07 fc       	sbrc	r0, 7
 b8e:	90 58       	subi	r25, 0x80	; 128
 b90:	08 95       	ret
 b92:	3e f0       	brts	.+14     	; 0xba2 <pow+0x80>
 b94:	7f ce       	rjmp	.-770    	; 0x894 <__fp_nan>
 b96:	60 e0       	ldi	r22, 0x00	; 0
 b98:	70 e0       	ldi	r23, 0x00	; 0
 b9a:	80 e8       	ldi	r24, 0x80	; 128
 b9c:	9f e3       	ldi	r25, 0x3F	; 63
 b9e:	08 95       	ret
 ba0:	4f e7       	ldi	r20, 0x7F	; 127
 ba2:	9f 77       	andi	r25, 0x7F	; 127
 ba4:	5f 93       	push	r21
 ba6:	4f 93       	push	r20
 ba8:	3f 93       	push	r19
 baa:	2f 93       	push	r18
 bac:	3d d0       	rcall	.+122    	; 0xc28 <log>
 bae:	2f 91       	pop	r18
 bb0:	3f 91       	pop	r19
 bb2:	4f 91       	pop	r20
 bb4:	5f 91       	pop	r21
 bb6:	52 df       	rcall	.-348    	; 0xa5c <__mulsf3>
 bb8:	d2 cd       	rjmp	.-1116   	; 0x75e <exp>

00000bba <__fp_cmp>:
 bba:	99 0f       	add	r25, r25
 bbc:	00 08       	sbc	r0, r0
 bbe:	55 0f       	add	r21, r21
 bc0:	aa 0b       	sbc	r26, r26
 bc2:	e0 e8       	ldi	r30, 0x80	; 128
 bc4:	fe ef       	ldi	r31, 0xFE	; 254
 bc6:	16 16       	cp	r1, r22
 bc8:	17 06       	cpc	r1, r23
 bca:	e8 07       	cpc	r30, r24
 bcc:	f9 07       	cpc	r31, r25
 bce:	c0 f0       	brcs	.+48     	; 0xc00 <__fp_cmp+0x46>
 bd0:	12 16       	cp	r1, r18
 bd2:	13 06       	cpc	r1, r19
 bd4:	e4 07       	cpc	r30, r20
 bd6:	f5 07       	cpc	r31, r21
 bd8:	98 f0       	brcs	.+38     	; 0xc00 <__fp_cmp+0x46>
 bda:	62 1b       	sub	r22, r18
 bdc:	73 0b       	sbc	r23, r19
 bde:	84 0b       	sbc	r24, r20
 be0:	95 0b       	sbc	r25, r21
 be2:	39 f4       	brne	.+14     	; 0xbf2 <__fp_cmp+0x38>
 be4:	0a 26       	eor	r0, r26
 be6:	61 f0       	breq	.+24     	; 0xc00 <__fp_cmp+0x46>
 be8:	23 2b       	or	r18, r19
 bea:	24 2b       	or	r18, r20
 bec:	25 2b       	or	r18, r21
 bee:	21 f4       	brne	.+8      	; 0xbf8 <__fp_cmp+0x3e>
 bf0:	08 95       	ret
 bf2:	0a 26       	eor	r0, r26
 bf4:	09 f4       	brne	.+2      	; 0xbf8 <__fp_cmp+0x3e>
 bf6:	a1 40       	sbci	r26, 0x01	; 1
 bf8:	a6 95       	lsr	r26
 bfa:	8f ef       	ldi	r24, 0xFF	; 255
 bfc:	81 1d       	adc	r24, r1
 bfe:	81 1d       	adc	r24, r1
 c00:	08 95       	ret

00000c02 <__fp_mpack>:
 c02:	9f 3f       	cpi	r25, 0xFF	; 255
 c04:	31 f0       	breq	.+12     	; 0xc12 <__fp_mpack_finite+0xc>

00000c06 <__fp_mpack_finite>:
 c06:	91 50       	subi	r25, 0x01	; 1
 c08:	20 f4       	brcc	.+8      	; 0xc12 <__fp_mpack_finite+0xc>
 c0a:	87 95       	ror	r24
 c0c:	77 95       	ror	r23
 c0e:	67 95       	ror	r22
 c10:	b7 95       	ror	r27
 c12:	88 0f       	add	r24, r24
 c14:	91 1d       	adc	r25, r1
 c16:	96 95       	lsr	r25
 c18:	87 95       	ror	r24
 c1a:	97 f9       	bld	r25, 7
 c1c:	08 95       	ret
 c1e:	0e f0       	brts	.+2      	; 0xc22 <__fp_mpack_finite+0x1c>
 c20:	f0 cf       	rjmp	.-32     	; 0xc02 <__fp_mpack>
 c22:	38 ce       	rjmp	.-912    	; 0x894 <__fp_nan>
 c24:	68 94       	set
 c26:	30 ce       	rjmp	.-928    	; 0x888 <__fp_inf>

00000c28 <log>:
 c28:	84 de       	rcall	.-760    	; 0x932 <__fp_splitA>
 c2a:	c8 f3       	brcs	.-14     	; 0xc1e <__fp_mpack_finite+0x18>
 c2c:	99 23       	and	r25, r25
 c2e:	d1 f3       	breq	.-12     	; 0xc24 <__fp_mpack_finite+0x1e>
 c30:	c6 f3       	brts	.-16     	; 0xc22 <__fp_mpack_finite+0x1c>
 c32:	df 93       	push	r29
 c34:	cf 93       	push	r28
 c36:	1f 93       	push	r17
 c38:	0f 93       	push	r16
 c3a:	ff 92       	push	r15
 c3c:	c9 2f       	mov	r28, r25
 c3e:	dd 27       	eor	r29, r29
 c40:	88 23       	and	r24, r24
 c42:	2a f0       	brmi	.+10     	; 0xc4e <log+0x26>
 c44:	21 97       	sbiw	r28, 0x01	; 1
 c46:	66 0f       	add	r22, r22
 c48:	77 1f       	adc	r23, r23
 c4a:	88 1f       	adc	r24, r24
 c4c:	da f7       	brpl	.-10     	; 0xc44 <log+0x1c>
 c4e:	20 e0       	ldi	r18, 0x00	; 0
 c50:	30 e0       	ldi	r19, 0x00	; 0
 c52:	40 e8       	ldi	r20, 0x80	; 128
 c54:	5f eb       	ldi	r21, 0xBF	; 191
 c56:	9f e3       	ldi	r25, 0x3F	; 63
 c58:	88 39       	cpi	r24, 0x98	; 152
 c5a:	20 f0       	brcs	.+8      	; 0xc64 <log+0x3c>
 c5c:	80 3e       	cpi	r24, 0xE0	; 224
 c5e:	30 f0       	brcs	.+12     	; 0xc6c <log+0x44>
 c60:	21 96       	adiw	r28, 0x01	; 1
 c62:	8f 77       	andi	r24, 0x7F	; 127
 c64:	ab dc       	rcall	.-1706   	; 0x5bc <__addsf3>
 c66:	ee e4       	ldi	r30, 0x4E	; 78
 c68:	f0 e0       	ldi	r31, 0x00	; 0
 c6a:	03 c0       	rjmp	.+6      	; 0xc72 <log+0x4a>
 c6c:	a7 dc       	rcall	.-1714   	; 0x5bc <__addsf3>
 c6e:	eb e7       	ldi	r30, 0x7B	; 123
 c70:	f0 e0       	ldi	r31, 0x00	; 0
 c72:	13 de       	rcall	.-986    	; 0x89a <__fp_powser>
 c74:	8b 01       	movw	r16, r22
 c76:	be 01       	movw	r22, r28
 c78:	ec 01       	movw	r28, r24
 c7a:	fb 2e       	mov	r15, r27
 c7c:	6f 57       	subi	r22, 0x7F	; 127
 c7e:	71 09       	sbc	r23, r1
 c80:	75 95       	asr	r23
 c82:	77 1f       	adc	r23, r23
 c84:	88 0b       	sbc	r24, r24
 c86:	99 0b       	sbc	r25, r25
 c88:	c4 dd       	rcall	.-1144   	; 0x812 <__floatsisf>
 c8a:	28 e1       	ldi	r18, 0x18	; 24
 c8c:	32 e7       	ldi	r19, 0x72	; 114
 c8e:	41 e3       	ldi	r20, 0x31	; 49
 c90:	5f e3       	ldi	r21, 0x3F	; 63
 c92:	f0 de       	rcall	.-544    	; 0xa74 <__mulsf3x>
 c94:	af 2d       	mov	r26, r15
 c96:	98 01       	movw	r18, r16
 c98:	ae 01       	movw	r20, r28
 c9a:	ff 90       	pop	r15
 c9c:	0f 91       	pop	r16
 c9e:	1f 91       	pop	r17
 ca0:	cf 91       	pop	r28
 ca2:	df 91       	pop	r29
 ca4:	9c dc       	rcall	.-1736   	; 0x5de <__addsf3x>
 ca6:	2c ce       	rjmp	.-936    	; 0x900 <__fp_round>

00000ca8 <__divmodsi4>:
 ca8:	05 2e       	mov	r0, r21
 caa:	97 fb       	bst	r25, 7
 cac:	16 f4       	brtc	.+4      	; 0xcb2 <__divmodsi4+0xa>
 cae:	00 94       	com	r0
 cb0:	0f d0       	rcall	.+30     	; 0xcd0 <__negsi2>
 cb2:	57 fd       	sbrc	r21, 7
 cb4:	05 d0       	rcall	.+10     	; 0xcc0 <__divmodsi4_neg2>
 cb6:	14 d0       	rcall	.+40     	; 0xce0 <__udivmodsi4>
 cb8:	07 fc       	sbrc	r0, 7
 cba:	02 d0       	rcall	.+4      	; 0xcc0 <__divmodsi4_neg2>
 cbc:	46 f4       	brtc	.+16     	; 0xcce <__divmodsi4_exit>
 cbe:	08 c0       	rjmp	.+16     	; 0xcd0 <__negsi2>

00000cc0 <__divmodsi4_neg2>:
 cc0:	50 95       	com	r21
 cc2:	40 95       	com	r20
 cc4:	30 95       	com	r19
 cc6:	21 95       	neg	r18
 cc8:	3f 4f       	sbci	r19, 0xFF	; 255
 cca:	4f 4f       	sbci	r20, 0xFF	; 255
 ccc:	5f 4f       	sbci	r21, 0xFF	; 255

00000cce <__divmodsi4_exit>:
 cce:	08 95       	ret

00000cd0 <__negsi2>:
 cd0:	90 95       	com	r25
 cd2:	80 95       	com	r24
 cd4:	70 95       	com	r23
 cd6:	61 95       	neg	r22
 cd8:	7f 4f       	sbci	r23, 0xFF	; 255
 cda:	8f 4f       	sbci	r24, 0xFF	; 255
 cdc:	9f 4f       	sbci	r25, 0xFF	; 255
 cde:	08 95       	ret

00000ce0 <__udivmodsi4>:
 ce0:	a1 e2       	ldi	r26, 0x21	; 33
 ce2:	1a 2e       	mov	r1, r26
 ce4:	aa 1b       	sub	r26, r26
 ce6:	bb 1b       	sub	r27, r27
 ce8:	fd 01       	movw	r30, r26
 cea:	0d c0       	rjmp	.+26     	; 0xd06 <__udivmodsi4_ep>

00000cec <__udivmodsi4_loop>:
 cec:	aa 1f       	adc	r26, r26
 cee:	bb 1f       	adc	r27, r27
 cf0:	ee 1f       	adc	r30, r30
 cf2:	ff 1f       	adc	r31, r31
 cf4:	a2 17       	cp	r26, r18
 cf6:	b3 07       	cpc	r27, r19
 cf8:	e4 07       	cpc	r30, r20
 cfa:	f5 07       	cpc	r31, r21
 cfc:	20 f0       	brcs	.+8      	; 0xd06 <__udivmodsi4_ep>
 cfe:	a2 1b       	sub	r26, r18
 d00:	b3 0b       	sbc	r27, r19
 d02:	e4 0b       	sbc	r30, r20
 d04:	f5 0b       	sbc	r31, r21

00000d06 <__udivmodsi4_ep>:
 d06:	66 1f       	adc	r22, r22
 d08:	77 1f       	adc	r23, r23
 d0a:	88 1f       	adc	r24, r24
 d0c:	99 1f       	adc	r25, r25
 d0e:	1a 94       	dec	r1
 d10:	69 f7       	brne	.-38     	; 0xcec <__udivmodsi4_loop>
 d12:	60 95       	com	r22
 d14:	70 95       	com	r23
 d16:	80 95       	com	r24
 d18:	90 95       	com	r25
 d1a:	9b 01       	movw	r18, r22
 d1c:	ac 01       	movw	r20, r24
 d1e:	bd 01       	movw	r22, r26
 d20:	cf 01       	movw	r24, r30
 d22:	08 95       	ret

00000d24 <random_r>:
 d24:	8f 92       	push	r8
 d26:	9f 92       	push	r9
 d28:	af 92       	push	r10
 d2a:	bf 92       	push	r11
 d2c:	cf 92       	push	r12
 d2e:	df 92       	push	r13
 d30:	ef 92       	push	r14
 d32:	ff 92       	push	r15
 d34:	cf 93       	push	r28
 d36:	df 93       	push	r29
 d38:	ec 01       	movw	r28, r24
 d3a:	68 81       	ld	r22, Y
 d3c:	79 81       	ldd	r23, Y+1	; 0x01
 d3e:	8a 81       	ldd	r24, Y+2	; 0x02
 d40:	9b 81       	ldd	r25, Y+3	; 0x03
 d42:	61 15       	cp	r22, r1
 d44:	71 05       	cpc	r23, r1
 d46:	81 05       	cpc	r24, r1
 d48:	91 05       	cpc	r25, r1
 d4a:	21 f4       	brne	.+8      	; 0xd54 <random_r+0x30>
 d4c:	64 e2       	ldi	r22, 0x24	; 36
 d4e:	79 ed       	ldi	r23, 0xD9	; 217
 d50:	8b e5       	ldi	r24, 0x5B	; 91
 d52:	97 e0       	ldi	r25, 0x07	; 7
 d54:	2d e1       	ldi	r18, 0x1D	; 29
 d56:	33 ef       	ldi	r19, 0xF3	; 243
 d58:	41 e0       	ldi	r20, 0x01	; 1
 d5a:	50 e0       	ldi	r21, 0x00	; 0
 d5c:	a5 df       	rcall	.-182    	; 0xca8 <__divmodsi4>
 d5e:	49 01       	movw	r8, r18
 d60:	5a 01       	movw	r10, r20
 d62:	9b 01       	movw	r18, r22
 d64:	ac 01       	movw	r20, r24
 d66:	a7 ea       	ldi	r26, 0xA7	; 167
 d68:	b1 e4       	ldi	r27, 0x41	; 65
 d6a:	78 d0       	rcall	.+240    	; 0xe5c <__muluhisi3>
 d6c:	6b 01       	movw	r12, r22
 d6e:	7c 01       	movw	r14, r24
 d70:	ac ee       	ldi	r26, 0xEC	; 236
 d72:	b4 ef       	ldi	r27, 0xF4	; 244
 d74:	a5 01       	movw	r20, r10
 d76:	94 01       	movw	r18, r8
 d78:	7d d0       	rcall	.+250    	; 0xe74 <__mulohisi3>
 d7a:	dc 01       	movw	r26, r24
 d7c:	cb 01       	movw	r24, r22
 d7e:	8c 0d       	add	r24, r12
 d80:	9d 1d       	adc	r25, r13
 d82:	ae 1d       	adc	r26, r14
 d84:	bf 1d       	adc	r27, r15
 d86:	b7 ff       	sbrs	r27, 7
 d88:	03 c0       	rjmp	.+6      	; 0xd90 <random_r+0x6c>
 d8a:	01 97       	sbiw	r24, 0x01	; 1
 d8c:	a1 09       	sbc	r26, r1
 d8e:	b0 48       	sbci	r27, 0x80	; 128
 d90:	88 83       	st	Y, r24
 d92:	99 83       	std	Y+1, r25	; 0x01
 d94:	aa 83       	std	Y+2, r26	; 0x02
 d96:	bb 83       	std	Y+3, r27	; 0x03
 d98:	bc 01       	movw	r22, r24
 d9a:	cd 01       	movw	r24, r26
 d9c:	9f 77       	andi	r25, 0x7F	; 127
 d9e:	df 91       	pop	r29
 da0:	cf 91       	pop	r28
 da2:	ff 90       	pop	r15
 da4:	ef 90       	pop	r14
 da6:	df 90       	pop	r13
 da8:	cf 90       	pop	r12
 daa:	bf 90       	pop	r11
 dac:	af 90       	pop	r10
 dae:	9f 90       	pop	r9
 db0:	8f 90       	pop	r8
 db2:	08 95       	ret

00000db4 <random>:
 db4:	8f 92       	push	r8
 db6:	9f 92       	push	r9
 db8:	af 92       	push	r10
 dba:	bf 92       	push	r11
 dbc:	cf 92       	push	r12
 dbe:	df 92       	push	r13
 dc0:	ef 92       	push	r14
 dc2:	ff 92       	push	r15
 dc4:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 dc8:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 dcc:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 dd0:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 dd4:	61 15       	cp	r22, r1
 dd6:	71 05       	cpc	r23, r1
 dd8:	81 05       	cpc	r24, r1
 dda:	91 05       	cpc	r25, r1
 ddc:	21 f4       	brne	.+8      	; 0xde6 <random+0x32>
 dde:	64 e2       	ldi	r22, 0x24	; 36
 de0:	79 ed       	ldi	r23, 0xD9	; 217
 de2:	8b e5       	ldi	r24, 0x5B	; 91
 de4:	97 e0       	ldi	r25, 0x07	; 7
 de6:	2d e1       	ldi	r18, 0x1D	; 29
 de8:	33 ef       	ldi	r19, 0xF3	; 243
 dea:	41 e0       	ldi	r20, 0x01	; 1
 dec:	50 e0       	ldi	r21, 0x00	; 0
 dee:	5c df       	rcall	.-328    	; 0xca8 <__divmodsi4>
 df0:	49 01       	movw	r8, r18
 df2:	5a 01       	movw	r10, r20
 df4:	9b 01       	movw	r18, r22
 df6:	ac 01       	movw	r20, r24
 df8:	a7 ea       	ldi	r26, 0xA7	; 167
 dfa:	b1 e4       	ldi	r27, 0x41	; 65
 dfc:	2f d0       	rcall	.+94     	; 0xe5c <__muluhisi3>
 dfe:	6b 01       	movw	r12, r22
 e00:	7c 01       	movw	r14, r24
 e02:	ac ee       	ldi	r26, 0xEC	; 236
 e04:	b4 ef       	ldi	r27, 0xF4	; 244
 e06:	a5 01       	movw	r20, r10
 e08:	94 01       	movw	r18, r8
 e0a:	34 d0       	rcall	.+104    	; 0xe74 <__mulohisi3>
 e0c:	dc 01       	movw	r26, r24
 e0e:	cb 01       	movw	r24, r22
 e10:	8c 0d       	add	r24, r12
 e12:	9d 1d       	adc	r25, r13
 e14:	ae 1d       	adc	r26, r14
 e16:	bf 1d       	adc	r27, r15
 e18:	b7 ff       	sbrs	r27, 7
 e1a:	03 c0       	rjmp	.+6      	; 0xe22 <random+0x6e>
 e1c:	01 97       	sbiw	r24, 0x01	; 1
 e1e:	a1 09       	sbc	r26, r1
 e20:	b0 48       	sbci	r27, 0x80	; 128
 e22:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 e26:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 e2a:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 e2e:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 e32:	bc 01       	movw	r22, r24
 e34:	cd 01       	movw	r24, r26
 e36:	9f 77       	andi	r25, 0x7F	; 127
 e38:	ff 90       	pop	r15
 e3a:	ef 90       	pop	r14
 e3c:	df 90       	pop	r13
 e3e:	cf 90       	pop	r12
 e40:	bf 90       	pop	r11
 e42:	af 90       	pop	r10
 e44:	9f 90       	pop	r9
 e46:	8f 90       	pop	r8
 e48:	08 95       	ret

00000e4a <srandom>:
 e4a:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
 e4e:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 e52:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 e56:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 e5a:	08 95       	ret

00000e5c <__muluhisi3>:
 e5c:	0f d0       	rcall	.+30     	; 0xe7c <__umulhisi3>
 e5e:	a5 9f       	mul	r26, r21
 e60:	90 0d       	add	r25, r0
 e62:	b4 9f       	mul	r27, r20
 e64:	90 0d       	add	r25, r0
 e66:	a4 9f       	mul	r26, r20
 e68:	80 0d       	add	r24, r0
 e6a:	91 1d       	adc	r25, r1
 e6c:	11 24       	eor	r1, r1
 e6e:	08 95       	ret

00000e70 <__mulshisi3>:
 e70:	b7 ff       	sbrs	r27, 7
 e72:	f4 cf       	rjmp	.-24     	; 0xe5c <__muluhisi3>

00000e74 <__mulohisi3>:
 e74:	f3 df       	rcall	.-26     	; 0xe5c <__muluhisi3>
 e76:	82 1b       	sub	r24, r18
 e78:	93 0b       	sbc	r25, r19
 e7a:	08 95       	ret

00000e7c <__umulhisi3>:
 e7c:	a2 9f       	mul	r26, r18
 e7e:	b0 01       	movw	r22, r0
 e80:	b3 9f       	mul	r27, r19
 e82:	c0 01       	movw	r24, r0
 e84:	a3 9f       	mul	r26, r19
 e86:	01 d0       	rcall	.+2      	; 0xe8a <__umulhisi3+0xe>
 e88:	b2 9f       	mul	r27, r18
 e8a:	70 0d       	add	r23, r0
 e8c:	81 1d       	adc	r24, r1
 e8e:	11 24       	eor	r1, r1
 e90:	91 1d       	adc	r25, r1
 e92:	08 95       	ret

00000e94 <_exit>:
 e94:	f8 94       	cli

00000e96 <__stop_program>:
 e96:	ff cf       	rjmp	.-2      	; 0xe96 <__stop_program>
